{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0","program":"/Users/tuphan/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","curve25519_dalek","/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","--cfg","feature=\"u64_backend\"","-C","metadata=122b7ff646b22ff0","-C","extra-filename=-122b7ff646b22ff0","--out-dir","/Users/tuphan/Desktop/soprox/packages/hello/program/target/rls/debug/deps","-L","dependency=/Users/tuphan/Desktop/soprox/packages/hello/program/target/rls/debug/deps","--extern","byteorder=/Users/tuphan/Desktop/soprox/packages/hello/program/target/rls/debug/deps/libbyteorder-f0e5f1993532b432.rmeta","--extern","digest=/Users/tuphan/Desktop/soprox/packages/hello/program/target/rls/debug/deps/libdigest-8699db6e49b6343f.rmeta","--extern","rand_core=/Users/tuphan/Desktop/soprox/packages/hello/program/target/rls/debug/deps/librand_core-0f167a5668c38692.rmeta","--extern","subtle=/Users/tuphan/Desktop/soprox/packages/hello/program/target/rls/debug/deps/libsubtle-889a03a6db1690dc.rmeta","--extern","zeroize=/Users/tuphan/Desktop/soprox/packages/hello/program/target/rls/debug/deps/libzeroize-cd4c54e9763fa9a3.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/tuphan/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/tuphan/Desktop/soprox/packages/hello/program/target/rls/debug/deps/libcurve25519_dalek-122b7ff646b22ff0.rmeta"},"prelude":{"crate_id":{"name":"curve25519_dalek","disambiguator":[11078730880055812372,4671235499249057287]},"crate_root":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src","external_crates":[{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8996585198574955197,10064433740309368892]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11464076584146293375,1944750198668660233]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13665112390248177411,18026488694072058539]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[8089372304544504840,2527656813180266519]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4173548784217791313,6413716694370064316]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4417783556059781835,6377966464484580742]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16465050104586441903,11486803546517078730]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4077680908246514517,3259883106732070033]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1548350640775673346,17931765307891215690]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[3115519341803559472,4584691163881866229]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8103449524405359139,17525483118853280774]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16653067590616142994,3376435367795585491]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[12324169339618228571,8193712517758892028]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[11110532902483564599,1367988466669347686]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[9623270257962620076,7602523633458697349]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":16,"id":{"name":"byteorder","disambiguator":[17512132522436105394,3099230586842464394]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":17,"id":{"name":"digest","disambiguator":[12429014348282948187,5806890432087910349]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":18,"id":{"name":"generic_array","disambiguator":[13378737224676867052,13223340816535363268]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":19,"id":{"name":"typenum","disambiguator":[5327378908255250319,16963409530580176108]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":20,"id":{"name":"rand_core","disambiguator":[14017136733051138576,14309585893705708458]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":21,"id":{"name":"getrandom","disambiguator":[16234944960360635054,6109487555876430046]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":22,"id":{"name":"cfg_if","disambiguator":[7640424083748952209,18047585548760446411]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":23,"id":{"name":"libc","disambiguator":[6099859931488417773,6497929839224625958]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":24,"id":{"name":"zeroize","disambiguator":[16600613764971914553,17637994836512661875]}},{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","num":25,"id":{"name":"subtle","disambiguator":[14926079095824044943,16654616532064095698]}}],"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","byte_start":290,"byte_end":3023,"line_start":11,"line_end":98,"column_start":1,"column_end":23}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":182455,"byte_end":182456,"line_start":37,"line_end":37,"column_start":42,"column_end":43},"alias_span":null,"name":"*","value":"SQRT_M1, EDWARDS_D, AFFINE_ODD_MULTIPLES_OF_BASEPOINT, EDWARDS_D_MINUS_ONE_SQUARED, EIGHT_TORSION, ED25519_BASEPOINT_TABLE, APLUS2_OVER_FOUR, SQRT_AD_MINUS_ONE, R, ED25519_BASEPOINT_POINT, EDWARDS_D2, ONE_MINUS_EDWARDS_D_SQUARED, MINUS_ONE, LFACTOR, L, RR, INVSQRT_A_MINUS_D","parent":{"krate":0,"index":812}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","byte_start":290,"byte_end":3023,"line_start":11,"line_end":98,"column_start":1,"column_end":23},"name":"","qualname":"::","value":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":17},{"krate":0,"index":269},{"krate":0,"index":348},{"krate":0,"index":578},{"krate":0,"index":812},{"krate":0,"index":838},{"krate":0,"index":889},{"krate":0,"index":932},{"krate":0,"index":1428},{"krate":0,"index":1432}],"decl_id":null,"docs":" Note that docs will only build on nightly Rust until\n [RFC 1990 stabilizes](https://github.com/rust-lang/rust/issues/44732).\n","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","byte_start":290,"byte_end":300,"line_start":11,"line_end":11,"column_start":1,"column_end":11}},{"value":"/ Note that docs will only build on nightly Rust until","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","byte_start":1042,"byte_end":1098,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/ [RFC 1990 stabilizes](https://github.com/rust-lang/rust/issues/44732).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","byte_start":1099,"byte_end":1173,"line_start":28,"line_end":28,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"scalar","qualname":"::scalar","value":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":1512},{"krate":0,"index":1521},{"krate":0,"index":1518},{"krate":0,"index":1515},{"krate":0,"index":98},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":1522},{"krate":0,"index":120},{"krate":0,"index":1524},{"krate":0,"index":1528},{"krate":0,"index":1532},{"krate":0,"index":125},{"krate":0,"index":1535},{"krate":0,"index":128},{"krate":0,"index":1537},{"krate":0,"index":1541},{"krate":0,"index":1545},{"krate":0,"index":133},{"krate":0,"index":1548},{"krate":0,"index":136},{"krate":0,"index":1550},{"krate":0,"index":1554},{"krate":0,"index":1558},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":157},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":177},{"krate":0,"index":187},{"krate":0,"index":197},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":264}],"decl_id":null,"docs":" Arithmetic on scalars (integers mod the group order).","sig":null,"attributes":[{"value":"/ Arithmetic on scalars (integers mod the group order).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":6563,"byte_end":6620,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":6621,"byte_end":6624,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Both the Ristretto group and the Ed25519 basepoint have prime order","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":6625,"byte_end":6696,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ \\\\( \\ell = 2\\^{252} + 27742317777372353535851937790883648493 \\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":6697,"byte_end":6766,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":6767,"byte_end":6770,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This code is intended to be useful with both the Ristretto group","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":6771,"byte_end":6839,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ (where everything is done modulo \\\\( \\ell \\\\)), and the X/Ed25519","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":6840,"byte_end":6909,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ setting, which mandates specific bit-twiddles that are not","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":6910,"byte_end":6972,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/ well-defined modulo \\\\( \\ell \\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":6973,"byte_end":7010,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7011,"byte_end":7014,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All arithmetic on `Scalars` is done modulo \\\\( \\ell \\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7015,"byte_end":7075,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7076,"byte_end":7079,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Constructing a scalar","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7080,"byte_end":7107,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7108,"byte_end":7111,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ To create a [`Scalar`](struct.Scalar.html) from a supposedly canonical encoding, use","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7112,"byte_end":7200,"line_start":27,"line_end":27,"column_start":1,"column_end":89}},{"value":"/ [`Scalar::from_canonical_bytes`](struct.Scalar.html#method.from_canonical_bytes).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7201,"byte_end":7286,"line_start":28,"line_end":28,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7287,"byte_end":7290,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function does input validation, ensuring that the input bytes","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7291,"byte_end":7361,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ are the canonical encoding of a `Scalar`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7362,"byte_end":7407,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/ If they are, we'll get","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7408,"byte_end":7434,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ `Some(Scalar)` in return:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7435,"byte_end":7464,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7465,"byte_end":7468,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7469,"byte_end":7476,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7477,"byte_end":7518,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7519,"byte_end":7522,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let one_as_bytes: [u8; 32] = Scalar::one().to_bytes();","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7523,"byte_end":7581,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let a: Option<Scalar> = Scalar::from_canonical_bytes(one_as_bytes);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7582,"byte_end":7653,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7654,"byte_end":7657,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ assert!(a.is_some());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7658,"byte_end":7683,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7684,"byte_end":7691,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7692,"byte_end":7695,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ However, if we give it bytes representing a scalar larger than \\\\( \\ell \\\\)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7696,"byte_end":7775,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ (in this case, \\\\( \\ell + 2 \\\\)), we'll get `None` back:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7776,"byte_end":7836,"line_start":45,"line_end":45,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7837,"byte_end":7840,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7841,"byte_end":7848,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7849,"byte_end":7890,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7891,"byte_end":7894,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let l_plus_two_bytes: [u8; 32] = [","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7895,"byte_end":7933,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/    0xef, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7934,"byte_end":7988,"line_start":51,"line_end":51,"column_start":1,"column_end":55}},{"value":"/    0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":7989,"byte_end":8043,"line_start":52,"line_end":52,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8044,"byte_end":8098,"line_start":53,"line_end":53,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8099,"byte_end":8153,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/ ];","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8154,"byte_end":8160,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/ let a: Option<Scalar> = Scalar::from_canonical_bytes(l_plus_two_bytes);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8161,"byte_end":8236,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8237,"byte_end":8240,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ assert!(a.is_none());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8241,"byte_end":8266,"line_start":58,"line_end":58,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8267,"byte_end":8274,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8275,"byte_end":8278,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Another way to create a `Scalar` is by reducing a \\\\(256\\\\)-bit integer mod","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8279,"byte_end":8358,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ \\\\( \\ell \\\\), for which one may use the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8359,"byte_end":8402,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ [`Scalar::from_bytes_mod_order`](struct.Scalar.html#method.from_bytes_mod_order)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8403,"byte_end":8487,"line_start":63,"line_end":63,"column_start":1,"column_end":85}},{"value":"/ method.  In the case of the second example above, this would reduce the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8488,"byte_end":8563,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ resultant scalar \\\\( \\mod \\ell \\\\), producing \\\\( 2 \\\\):","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8564,"byte_end":8624,"line_start":65,"line_end":65,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8625,"byte_end":8628,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8629,"byte_end":8636,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8637,"byte_end":8678,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8679,"byte_end":8682,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let l_plus_two_bytes: [u8; 32] = [","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8683,"byte_end":8721,"line_start":70,"line_end":70,"column_start":1,"column_end":39}},{"value":"/    0xef, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8722,"byte_end":8776,"line_start":71,"line_end":71,"column_start":1,"column_end":55}},{"value":"/    0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8777,"byte_end":8831,"line_start":72,"line_end":72,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8832,"byte_end":8886,"line_start":73,"line_end":73,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8887,"byte_end":8941,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ ];","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8942,"byte_end":8948,"line_start":75,"line_end":75,"column_start":1,"column_end":7}},{"value":"/ let a: Scalar = Scalar::from_bytes_mod_order(l_plus_two_bytes);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":8949,"byte_end":9016,"line_start":76,"line_end":76,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9017,"byte_end":9020,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ let two: Scalar = Scalar::one() + Scalar::one();","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9021,"byte_end":9073,"line_start":78,"line_end":78,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9074,"byte_end":9077,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ assert!(a == two);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9078,"byte_end":9100,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9101,"byte_end":9108,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9109,"byte_end":9112,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ There is also a constructor that reduces a \\\\(512\\\\)-bit integer,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9113,"byte_end":9182,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/ [`Scalar::from_bytes_mod_order_wide`](struct.Scalar.html#method.from_bytes_mod_order_wide).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9183,"byte_end":9278,"line_start":84,"line_end":84,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9279,"byte_end":9282,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ To construct a `Scalar` as the hash of some input data, use","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9283,"byte_end":9346,"line_start":86,"line_end":86,"column_start":1,"column_end":64}},{"value":"/ [`Scalar::hash_from_bytes`](struct.Scalar.html#method.hash_from_bytes),","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9347,"byte_end":9422,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/ which takes a buffer, or","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9423,"byte_end":9451,"line_start":88,"line_end":88,"column_start":1,"column_end":29}},{"value":"/ [`Scalar::from_hash`](struct.Scalar.html#method.from_hash),","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9452,"byte_end":9515,"line_start":89,"line_end":89,"column_start":1,"column_end":64}},{"value":"/ which allows an IUF API.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9516,"byte_end":9544,"line_start":90,"line_end":90,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9545,"byte_end":9548,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9549,"byte_end":9556,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9557,"byte_end":9593,"line_start":93,"line_end":93,"column_start":1,"column_end":37}},{"value":"/ # extern crate sha2;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9594,"byte_end":9618,"line_start":94,"line_end":94,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9619,"byte_end":9624,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9625,"byte_end":9642,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/ use sha2::{Digest, Sha512};","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9643,"byte_end":9674,"line_start":97,"line_end":97,"column_start":1,"column_end":32}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9675,"byte_end":9716,"line_start":98,"line_end":98,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9717,"byte_end":9720,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // Hashing a single byte slice","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9721,"byte_end":9755,"line_start":100,"line_end":100,"column_start":1,"column_end":35}},{"value":"/ let a = Scalar::hash_from_bytes::<Sha512>(b\"Abolish ICE\");","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9756,"byte_end":9818,"line_start":101,"line_end":101,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9819,"byte_end":9822,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ // Streaming data into a hash object","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9823,"byte_end":9863,"line_start":103,"line_end":103,"column_start":1,"column_end":41}},{"value":"/ let mut hasher = Sha512::default();","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9864,"byte_end":9903,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/ hasher.input(b\"Abolish \");","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9904,"byte_end":9934,"line_start":105,"line_end":105,"column_start":1,"column_end":31}},{"value":"/ hasher.input(b\"ICE\");","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9935,"byte_end":9960,"line_start":106,"line_end":106,"column_start":1,"column_end":26}},{"value":"/ let a2 = Scalar::from_hash(hasher);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":9961,"byte_end":10000,"line_start":107,"line_end":107,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10001,"byte_end":10004,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a, a2);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10005,"byte_end":10027,"line_start":109,"line_end":109,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10028,"byte_end":10035,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10036,"byte_end":10043,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10044,"byte_end":10047,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Finally, to create a `Scalar` with a specific bit-pattern","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10048,"byte_end":10109,"line_start":113,"line_end":113,"column_start":1,"column_end":62}},{"value":"/ (e.g., for compatibility with X/Ed25519","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10110,"byte_end":10153,"line_start":114,"line_end":114,"column_start":1,"column_end":44}},{"value":"/ [\"clamping\"](https://github.com/isislovecruft/ed25519-dalek/blob/f790bd2ce/src/ed25519.rs#L349)),","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10154,"byte_end":10255,"line_start":115,"line_end":115,"column_start":1,"column_end":102}},{"value":"/ use [`Scalar::from_bits`](struct.Scalar.html#method.from_bits). This","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10256,"byte_end":10328,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/ constructs a scalar with exactly the bit pattern given, without any","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10329,"byte_end":10400,"line_start":117,"line_end":117,"column_start":1,"column_end":72}},{"value":"/ assurances as to reduction modulo the group order:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10401,"byte_end":10455,"line_start":118,"line_end":118,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10456,"byte_end":10459,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10460,"byte_end":10467,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10468,"byte_end":10509,"line_start":121,"line_end":121,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10510,"byte_end":10513,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ let l_plus_two_bytes: [u8; 32] = [","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10514,"byte_end":10552,"line_start":123,"line_end":123,"column_start":1,"column_end":39}},{"value":"/    0xef, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10553,"byte_end":10607,"line_start":124,"line_end":124,"column_start":1,"column_end":55}},{"value":"/    0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10608,"byte_end":10662,"line_start":125,"line_end":125,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10663,"byte_end":10717,"line_start":126,"line_end":126,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10718,"byte_end":10772,"line_start":127,"line_end":127,"column_start":1,"column_end":55}},{"value":"/ ];","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10773,"byte_end":10779,"line_start":128,"line_end":128,"column_start":1,"column_end":7}},{"value":"/ let a: Scalar = Scalar::from_bits(l_plus_two_bytes);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10780,"byte_end":10836,"line_start":129,"line_end":129,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10837,"byte_end":10840,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ let two: Scalar = Scalar::one() + Scalar::one();","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10841,"byte_end":10893,"line_start":131,"line_end":131,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10894,"byte_end":10897,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert!(a != two);              // the scalar is not reduced (mod l)…","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10898,"byte_end":10973,"line_start":133,"line_end":133,"column_start":1,"column_end":74}},{"value":"/ assert!(! a.is_canonical());    // …and therefore is not canonical.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":10974,"byte_end":11047,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"/ assert!(a.reduce() == two);     // if we were to reduce it manually, it would be.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":11048,"byte_end":11133,"line_start":135,"line_end":135,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":11134,"byte_end":11141,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":11142,"byte_end":11145,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ The resulting `Scalar` has exactly the specified bit pattern,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":11146,"byte_end":11211,"line_start":138,"line_end":138,"column_start":1,"column_end":66}},{"value":"/ **except for the highest bit, which will be set to 0**.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":11212,"byte_end":11271,"line_start":139,"line_end":139,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1512},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":12504,"byte_end":12510,"line_start":186,"line_end":186,"column_start":12,"column_end":18},"name":"Scalar","qualname":"::scalar::Scalar","value":"Scalar {  }","parent":null,"children":[{"krate":0,"index":1513}],"decl_id":null,"docs":" The `Scalar` struct holds an integer \\\\(s < 2\\^{255} \\\\) which\n represents an element of \\\\(\\mathbb Z / \\ell\\\\).\n","sig":null,"attributes":[{"value":"/ The `Scalar` struct holds an integer \\\\(s < 2\\^{255} \\\\) which","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":12344,"byte_end":12410,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"/ represents an element of \\\\(\\mathbb Z / \\ell\\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":12411,"byte_end":12463,"line_start":184,"line_end":184,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":13278,"byte_end":13298,"line_start":205,"line_end":205,"column_start":12,"column_end":32},"name":"from_bytes_mod_order","qualname":"<Scalar>::from_bytes_mod_order","value":"pub fn from_bytes_mod_order([u8; ]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Scalar` by reducing a 256-bit little-endian integer\n modulo the group order \\\\( \\ell \\\\).\n","sig":null,"attributes":[{"value":"/ Construct a `Scalar` by reducing a 256-bit little-endian integer","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":13153,"byte_end":13221,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/ modulo the group order \\\\( \\ell \\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":13226,"byte_end":13266,"line_start":204,"line_end":204,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":13739,"byte_end":13764,"line_start":218,"line_end":218,"column_start":12,"column_end":37},"name":"from_bytes_mod_order_wide","qualname":"<Scalar>::from_bytes_mod_order_wide","value":"pub fn from_bytes_mod_order_wide(&[u8; ]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Scalar` by reducing a 512-bit little-endian integer\n modulo the group order \\\\( \\ell \\\\).\n","sig":null,"attributes":[{"value":"/ Construct a `Scalar` by reducing a 512-bit little-endian integer","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":13614,"byte_end":13682,"line_start":216,"line_end":216,"column_start":5,"column_end":73}},{"value":"/ modulo the group order \\\\( \\ell \\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":13687,"byte_end":13727,"line_start":217,"line_end":217,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":14176,"byte_end":14196,"line_start":229,"line_end":229,"column_start":12,"column_end":32},"name":"from_canonical_bytes","qualname":"<Scalar>::from_canonical_bytes","value":"pub fn from_canonical_bytes([u8; ]) -> Option<Scalar>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to construct a `Scalar` from a canonical byte representation.","sig":null,"attributes":[{"value":"/ Attempt to construct a `Scalar` from a canonical byte representation.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":13860,"byte_end":13933,"line_start":222,"line_end":222,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":13938,"byte_end":13941,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":13946,"byte_end":13958,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":13963,"byte_end":13966,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ - `Some(s)`, where `s` is the `Scalar` corresponding to `bytes`,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":13971,"byte_end":14039,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/   if `bytes` is a canonical byte representation;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":14044,"byte_end":14096,"line_start":227,"line_end":227,"column_start":5,"column_end":57}},{"value":"/ - `None` if `bytes` is not a canonical byte representation.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":14101,"byte_end":14164,"line_start":228,"line_end":228,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":14752,"byte_end":14761,"line_start":246,"line_end":246,"column_start":18,"column_end":27},"name":"from_bits","qualname":"<Scalar>::from_bits","value":"pub const fn from_bits([u8; ]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Scalar` from the low 255 bits of a 256-bit integer.","sig":null,"attributes":[{"value":"/ Construct a `Scalar` from the low 255 bits of a 256-bit integer.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":14504,"byte_end":14572,"line_start":241,"line_end":241,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":14577,"byte_end":14580,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This function is intended for applications like X25519 which","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":14585,"byte_end":14649,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/ require specific bit-patterns when performing scalar","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":14654,"byte_end":14710,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/ multiplication.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":14715,"byte_end":14734,"line_start":245,"line_end":245,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23352,"byte_end":23358,"line_start":558,"line_end":558,"column_start":12,"column_end":18},"name":"random","qualname":"<Scalar>::random","value":"pub fn random<R: RngCore + CryptoRng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a `Scalar` chosen uniformly at random using a user-provided RNG.","sig":null,"attributes":[{"value":"/ Return a `Scalar` chosen uniformly at random using a user-provided RNG.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":22738,"byte_end":22813,"line_start":534,"line_end":534,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":22818,"byte_end":22821,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":22826,"byte_end":22838,"line_start":536,"line_end":536,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":22843,"byte_end":22846,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ * `rng`: any RNG which implements the `RngCore + CryptoRng` interface.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":22851,"byte_end":22925,"line_start":538,"line_end":538,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":22930,"byte_end":22933,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":22938,"byte_end":22951,"line_start":540,"line_end":540,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":22956,"byte_end":22959,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ A random scalar within ℤ/lℤ.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":22964,"byte_end":23000,"line_start":542,"line_end":542,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23005,"byte_end":23008,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23013,"byte_end":23026,"line_start":544,"line_end":544,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23031,"byte_end":23034,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23039,"byte_end":23046,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/ extern crate rand_core;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23051,"byte_end":23078,"line_start":547,"line_end":547,"column_start":5,"column_end":32}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23083,"byte_end":23119,"line_start":548,"line_end":548,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23124,"byte_end":23129,"line_start":549,"line_end":549,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23134,"byte_end":23151,"line_start":550,"line_end":550,"column_start":5,"column_end":22}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23156,"byte_end":23197,"line_start":551,"line_end":551,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23202,"byte_end":23205,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ use rand_core::OsRng;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23210,"byte_end":23235,"line_start":553,"line_end":553,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23240,"byte_end":23243,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let mut csprng = OsRng;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23248,"byte_end":23275,"line_start":555,"line_end":555,"column_start":5,"column_end":32}},{"value":"/ let a: Scalar = Scalar::random(&mut csprng);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23280,"byte_end":23328,"line_start":556,"line_end":556,"column_start":5,"column_end":53}},{"value":"/ # }","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23333,"byte_end":23340,"line_start":557,"line_end":557,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24350,"byte_end":24365,"line_start":587,"line_end":587,"column_start":12,"column_end":27},"name":"hash_from_bytes","qualname":"<Scalar>::hash_from_bytes","value":"pub fn hash_from_bytes<D>(&[u8]) -> Scalar where D: Digest<OutputSize = U64> +\nDefault","parent":null,"children":[],"decl_id":null,"docs":" Hash a slice of bytes into a scalar.","sig":null,"attributes":[{"value":"/ Hash a slice of bytes into a scalar.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23559,"byte_end":23599,"line_start":564,"line_end":564,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23604,"byte_end":23607,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ Takes a type parameter `D`, which is any `Digest` producing 64","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23612,"byte_end":23678,"line_start":566,"line_end":566,"column_start":5,"column_end":71}},{"value":"/ bytes (512 bits) of output.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23683,"byte_end":23714,"line_start":567,"line_end":567,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23719,"byte_end":23722,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Convenience wrapper around `from_hash`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23727,"byte_end":23770,"line_start":569,"line_end":569,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23775,"byte_end":23778,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23783,"byte_end":23796,"line_start":571,"line_end":571,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23801,"byte_end":23804,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23809,"byte_end":23816,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23821,"byte_end":23857,"line_start":574,"line_end":574,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23862,"byte_end":23905,"line_start":575,"line_end":575,"column_start":5,"column_end":48}},{"value":"/ extern crate sha2;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23910,"byte_end":23932,"line_start":576,"line_end":576,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23937,"byte_end":23940,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ use sha2::Sha512;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23945,"byte_end":23966,"line_start":578,"line_end":578,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23971,"byte_end":23974,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ # // Need fn main() here in comment so the doctest compiles","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":23979,"byte_end":24042,"line_start":580,"line_end":580,"column_start":5,"column_end":68}},{"value":"/ # // See https://doc.rust-lang.org/book/documentation.html#documentation-as-tests","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24047,"byte_end":24132,"line_start":581,"line_end":581,"column_start":5,"column_end":90}},{"value":"/ # fn main() {","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24137,"byte_end":24154,"line_start":582,"line_end":582,"column_start":5,"column_end":22}},{"value":"/ let msg = \"To really appreciate architecture, you may even need to commit a murder\";","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24159,"byte_end":24247,"line_start":583,"line_end":583,"column_start":5,"column_end":93}},{"value":"/ let s = Scalar::hash_from_bytes::<Sha512>(msg.as_bytes());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24252,"byte_end":24314,"line_start":584,"line_end":584,"column_start":5,"column_end":67}},{"value":"/ # }","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24319,"byte_end":24326,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24331,"byte_end":24338,"line_start":586,"line_end":586,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26048,"byte_end":26057,"line_start":629,"line_end":629,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<Scalar>::from_hash","value":"pub fn from_hash<D>(D) -> Scalar where D: Digest<OutputSize = U64>","parent":null,"children":[],"decl_id":null,"docs":" Construct a scalar from an existing `Digest` instance.","sig":null,"attributes":[{"value":"/ Construct a scalar from an existing `Digest` instance.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24558,"byte_end":24616,"line_start":595,"line_end":595,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24621,"byte_end":24624,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ Use this instead of `hash_from_bytes` if it is more convenient","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24629,"byte_end":24695,"line_start":597,"line_end":597,"column_start":5,"column_end":71}},{"value":"/ to stream data into the `Digest` than to pass a single byte","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24700,"byte_end":24763,"line_start":598,"line_end":598,"column_start":5,"column_end":68}},{"value":"/ slice.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24768,"byte_end":24778,"line_start":599,"line_end":599,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24783,"byte_end":24786,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24791,"byte_end":24804,"line_start":601,"line_end":601,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24809,"byte_end":24812,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24817,"byte_end":24824,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24829,"byte_end":24865,"line_start":604,"line_end":604,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24870,"byte_end":24913,"line_start":605,"line_end":605,"column_start":5,"column_end":48}},{"value":"/ extern crate sha2;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24918,"byte_end":24940,"line_start":606,"line_end":606,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24945,"byte_end":24948,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ use sha2::Digest;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24953,"byte_end":24974,"line_start":608,"line_end":608,"column_start":5,"column_end":26}},{"value":"/ use sha2::Sha512;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":24979,"byte_end":25000,"line_start":609,"line_end":609,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25005,"byte_end":25008,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25013,"byte_end":25030,"line_start":611,"line_end":611,"column_start":5,"column_end":22}},{"value":"/ let mut h = Sha512::new()","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25035,"byte_end":25064,"line_start":612,"line_end":612,"column_start":5,"column_end":34}},{"value":"/     .chain(\"To really appreciate architecture, you may even need to commit a murder.\")","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25069,"byte_end":25159,"line_start":613,"line_end":613,"column_start":5,"column_end":95}},{"value":"/     .chain(\"While the programs used for The Manhattan Transcripts are of the most extreme\")","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25164,"byte_end":25259,"line_start":614,"line_end":614,"column_start":5,"column_end":100}},{"value":"/     .chain(\"nature, they also parallel the most common formula plot: the archetype of\")","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25264,"byte_end":25355,"line_start":615,"line_end":615,"column_start":5,"column_end":96}},{"value":"/     .chain(\"murder. Other phantasms were occasionally used to underline the fact that\")","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25360,"byte_end":25451,"line_start":616,"line_end":616,"column_start":5,"column_end":96}},{"value":"/     .chain(\"perhaps all architecture, rather than being about functional standards, is\")","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25456,"byte_end":25548,"line_start":617,"line_end":617,"column_start":5,"column_end":97}},{"value":"/     .chain(\"about love and death.\");","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25553,"byte_end":25593,"line_start":618,"line_end":618,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25598,"byte_end":25601,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ let s = Scalar::from_hash(h);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25606,"byte_end":25639,"line_start":620,"line_end":620,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25644,"byte_end":25647,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", s.to_bytes());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25652,"byte_end":25687,"line_start":622,"line_end":622,"column_start":5,"column_end":40}},{"value":"/ assert!(s == Scalar::from_bits([ 21,  88, 208, 252,  63, 122, 210, 152,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25692,"byte_end":25767,"line_start":623,"line_end":623,"column_start":5,"column_end":80}},{"value":"/                                 154,  38,  15,  23,  16, 167,  80, 150,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25772,"byte_end":25847,"line_start":624,"line_end":624,"column_start":5,"column_end":80}},{"value":"/                                 192, 221,  77, 226,  62,  25, 224, 148,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25852,"byte_end":25927,"line_start":625,"line_end":625,"column_start":5,"column_end":80}},{"value":"/                                 239,  48, 176,  10, 185,  69, 168,  11, ]));","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":25932,"byte_end":26012,"line_start":626,"line_end":626,"column_start":5,"column_end":85}},{"value":"/ # }","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26017,"byte_end":26024,"line_start":627,"line_end":627,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26029,"byte_end":26036,"line_start":628,"line_end":628,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26562,"byte_end":26570,"line_start":648,"line_end":648,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Scalar>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert this `Scalar` to its underlying sequence of bytes.","sig":null,"attributes":[{"value":"/ Convert this `Scalar` to its underlying sequence of bytes.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26284,"byte_end":26346,"line_start":637,"line_end":637,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26351,"byte_end":26354,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26359,"byte_end":26372,"line_start":639,"line_end":639,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26377,"byte_end":26380,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26385,"byte_end":26392,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26397,"byte_end":26438,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26443,"byte_end":26446,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ let s: Scalar = Scalar::zero();","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26451,"byte_end":26486,"line_start":644,"line_end":644,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26491,"byte_end":26494,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ assert!(s.to_bytes() == [0u8; 32]);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26499,"byte_end":26538,"line_start":646,"line_end":646,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26543,"byte_end":26550,"line_start":647,"line_end":647,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26920,"byte_end":26928,"line_start":663,"line_end":663,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Scalar>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View the little-endian byte encoding of the integer representing this Scalar.","sig":null,"attributes":[{"value":"/ View the little-endian byte encoding of the integer representing this Scalar.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26622,"byte_end":26703,"line_start":652,"line_end":652,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26708,"byte_end":26711,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26716,"byte_end":26729,"line_start":654,"line_end":654,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26734,"byte_end":26737,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26742,"byte_end":26749,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26754,"byte_end":26795,"line_start":657,"line_end":657,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26800,"byte_end":26803,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ let s: Scalar = Scalar::zero();","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26808,"byte_end":26843,"line_start":659,"line_end":659,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26848,"byte_end":26851,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ assert!(s.as_bytes() == &[0u8; 32]);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26856,"byte_end":26896,"line_start":661,"line_end":661,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26901,"byte_end":26908,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27029,"byte_end":27033,"line_start":668,"line_end":668,"column_start":12,"column_end":16},"name":"zero","qualname":"<Scalar>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the scalar \\\\( 0 \\\\).\n","sig":null,"attributes":[{"value":"/ Construct the scalar \\\\( 0 \\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":26982,"byte_end":27017,"line_start":667,"line_end":667,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27139,"byte_end":27142,"line_start":673,"line_end":673,"column_start":12,"column_end":15},"name":"one","qualname":"<Scalar>::one","value":"pub fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the scalar \\\\( 1 \\\\).\n","sig":null,"attributes":[{"value":"/ Construct the scalar \\\\( 1 \\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27092,"byte_end":27127,"line_start":672,"line_end":672,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28828,"byte_end":28834,"line_start":719,"line_end":719,"column_start":12,"column_end":18},"name":"invert","qualname":"<Scalar>::invert","value":"pub fn invert(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Given a nonzero `Scalar`, compute its multiplicative inverse.","sig":null,"attributes":[{"value":"/ Given a nonzero `Scalar`, compute its multiplicative inverse.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27357,"byte_end":27422,"line_start":682,"line_end":682,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27427,"byte_end":27430,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27435,"byte_end":27448,"line_start":684,"line_end":684,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27453,"byte_end":27456,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ `self` **MUST** be nonzero.  If you cannot","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27461,"byte_end":27507,"line_start":686,"line_end":686,"column_start":5,"column_end":51}},{"value":"/ *prove* that this is the case, you **SHOULD NOT USE THIS","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27512,"byte_end":27572,"line_start":687,"line_end":687,"column_start":5,"column_end":65}},{"value":"/ FUNCTION**.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27577,"byte_end":27592,"line_start":688,"line_end":688,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27597,"byte_end":27600,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27605,"byte_end":27618,"line_start":690,"line_end":690,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27623,"byte_end":27626,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ The multiplicative inverse of the this `Scalar`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27631,"byte_end":27683,"line_start":692,"line_end":692,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27688,"byte_end":27691,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27696,"byte_end":27709,"line_start":694,"line_end":694,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27714,"byte_end":27717,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27722,"byte_end":27729,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27734,"byte_end":27775,"line_start":697,"line_end":697,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27780,"byte_end":27783,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ // x = 2238329342913194256032495932344128051776374960164957527413114840482143558222","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27788,"byte_end":27875,"line_start":699,"line_end":699,"column_start":5,"column_end":92}},{"value":"/ let X: Scalar = Scalar::from_bytes_mod_order([","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27880,"byte_end":27930,"line_start":700,"line_end":700,"column_start":5,"column_end":55}},{"value":"/         0x4e, 0x5a, 0xb4, 0x34, 0x5d, 0x47, 0x08, 0x84,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27935,"byte_end":27994,"line_start":701,"line_end":701,"column_start":5,"column_end":64}},{"value":"/         0x59, 0x13, 0xb4, 0x64, 0x1b, 0xc2, 0x7d, 0x52,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":27999,"byte_end":28058,"line_start":702,"line_end":702,"column_start":5,"column_end":64}},{"value":"/         0x52, 0xa5, 0x85, 0x10, 0x1b, 0xcc, 0x42, 0x44,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28063,"byte_end":28122,"line_start":703,"line_end":703,"column_start":5,"column_end":64}},{"value":"/         0xd4, 0x49, 0xf4, 0xa8, 0x79, 0xd9, 0xf2, 0x04,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28127,"byte_end":28186,"line_start":704,"line_end":704,"column_start":5,"column_end":64}},{"value":"/     ]);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28191,"byte_end":28202,"line_start":705,"line_end":705,"column_start":5,"column_end":16}},{"value":"/ // 1/x = 6859937278830797291664592131120606308688036382723378951768035303146619657244","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28207,"byte_end":28296,"line_start":706,"line_end":706,"column_start":5,"column_end":94}},{"value":"/ let XINV: Scalar = Scalar::from_bytes_mod_order([","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28301,"byte_end":28354,"line_start":707,"line_end":707,"column_start":5,"column_end":58}},{"value":"/         0x1c, 0xdc, 0x17, 0xfc, 0xe0, 0xe9, 0xa5, 0xbb,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28359,"byte_end":28418,"line_start":708,"line_end":708,"column_start":5,"column_end":64}},{"value":"/         0xd9, 0x24, 0x7e, 0x56, 0xbb, 0x01, 0x63, 0x47,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28423,"byte_end":28482,"line_start":709,"line_end":709,"column_start":5,"column_end":64}},{"value":"/         0xbb, 0xba, 0x31, 0xed, 0xd5, 0xa9, 0xbb, 0x96,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28487,"byte_end":28546,"line_start":710,"line_end":710,"column_start":5,"column_end":64}},{"value":"/         0xd5, 0x0b, 0xcd, 0x7a, 0x3f, 0x96, 0x2a, 0x0f,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28551,"byte_end":28610,"line_start":711,"line_end":711,"column_start":5,"column_end":64}},{"value":"/     ]);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28615,"byte_end":28626,"line_start":712,"line_end":712,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28631,"byte_end":28634,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ let inv_X: Scalar = X.invert();","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28639,"byte_end":28674,"line_start":714,"line_end":714,"column_start":5,"column_end":40}},{"value":"/ assert!(XINV == inv_X);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28679,"byte_end":28706,"line_start":715,"line_end":715,"column_start":5,"column_end":32}},{"value":"/ let should_be_one: Scalar = &inv_X * &X;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28711,"byte_end":28755,"line_start":716,"line_end":716,"column_start":5,"column_end":49}},{"value":"/ assert!(should_be_one == Scalar::one());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28760,"byte_end":28804,"line_start":717,"line_end":717,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28809,"byte_end":28816,"line_start":718,"line_end":718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":30110,"byte_end":30122,"line_start":761,"line_end":761,"column_start":12,"column_end":24},"name":"batch_invert","qualname":"<Scalar>::batch_invert","value":"pub fn batch_invert(&mut [Scalar]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Given a slice of nonzero (possibly secret) `Scalar`s,\n compute their inverses in a batch.","sig":null,"attributes":[{"value":"/ Given a slice of nonzero (possibly secret) `Scalar`s,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28903,"byte_end":28960,"line_start":723,"line_end":723,"column_start":5,"column_end":62}},{"value":"/ compute their inverses in a batch.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":28965,"byte_end":29003,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29008,"byte_end":29011,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29016,"byte_end":29028,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29033,"byte_end":29036,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ Each element of `inputs` is replaced by its inverse.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29041,"byte_end":29097,"line_start":728,"line_end":728,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29102,"byte_end":29105,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ The product of all inverses is returned.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29110,"byte_end":29154,"line_start":730,"line_end":730,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29159,"byte_end":29162,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29167,"byte_end":29180,"line_start":732,"line_end":732,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29185,"byte_end":29188,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ All input `Scalars` **MUST** be nonzero.  If you cannot","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29193,"byte_end":29252,"line_start":734,"line_end":734,"column_start":5,"column_end":64}},{"value":"/ *prove* that this is the case, you **SHOULD NOT USE THIS","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29257,"byte_end":29317,"line_start":735,"line_end":735,"column_start":5,"column_end":65}},{"value":"/ FUNCTION**.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29322,"byte_end":29337,"line_start":736,"line_end":736,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29342,"byte_end":29345,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29350,"byte_end":29363,"line_start":738,"line_end":738,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29368,"byte_end":29371,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29376,"byte_end":29383,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29388,"byte_end":29424,"line_start":741,"line_end":741,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29429,"byte_end":29472,"line_start":742,"line_end":742,"column_start":5,"column_end":48}},{"value":"/ # fn main() {","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29477,"byte_end":29494,"line_start":743,"line_end":743,"column_start":5,"column_end":22}},{"value":"/ let mut scalars = [","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29499,"byte_end":29522,"line_start":744,"line_end":744,"column_start":5,"column_end":28}},{"value":"/     Scalar::from(3u64),","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29527,"byte_end":29554,"line_start":745,"line_end":745,"column_start":5,"column_end":32}},{"value":"/     Scalar::from(5u64),","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29559,"byte_end":29586,"line_start":746,"line_end":746,"column_start":5,"column_end":32}},{"value":"/     Scalar::from(7u64),","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29591,"byte_end":29618,"line_start":747,"line_end":747,"column_start":5,"column_end":32}},{"value":"/     Scalar::from(11u64),","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29623,"byte_end":29651,"line_start":748,"line_end":748,"column_start":5,"column_end":33}},{"value":"/ ];","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29656,"byte_end":29662,"line_start":749,"line_end":749,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29667,"byte_end":29670,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ let allinv = Scalar::batch_invert(&mut scalars);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29675,"byte_end":29727,"line_start":751,"line_end":751,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29732,"byte_end":29735,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(allinv, Scalar::from(3*5*7*11u64).invert());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29740,"byte_end":29799,"line_start":753,"line_end":753,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(scalars[0], Scalar::from(3u64).invert());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29804,"byte_end":29860,"line_start":754,"line_end":754,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(scalars[1], Scalar::from(5u64).invert());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29865,"byte_end":29921,"line_start":755,"line_end":755,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(scalars[2], Scalar::from(7u64).invert());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29926,"byte_end":29982,"line_start":756,"line_end":756,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(scalars[3], Scalar::from(11u64).invert());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":29987,"byte_end":30044,"line_start":757,"line_end":757,"column_start":5,"column_end":62}},{"value":"/ # }","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":30049,"byte_end":30056,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":30061,"byte_end":30068,"line_start":759,"line_end":759,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":30073,"byte_end":30098,"line_start":760,"line_end":760,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43145,"byte_end":43151,"line_start":1089,"line_end":1089,"column_start":12,"column_end":18},"name":"reduce","qualname":"<Scalar>::reduce","value":"pub fn reduce(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Reduce this `Scalar` modulo \\\\(\\ell\\\\).\n","sig":null,"attributes":[{"value":"/ Reduce this `Scalar` modulo \\\\(\\ell\\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43061,"byte_end":43104,"line_start":1087,"line_end":1087,"column_start":5,"column_end":48}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43109,"byte_end":43133,"line_start":1088,"line_end":1088,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":44057,"byte_end":44069,"line_start":1114,"line_end":1114,"column_start":12,"column_end":24},"name":"is_canonical","qualname":"<Scalar>::is_canonical","value":"pub fn is_canonical(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether this `Scalar` is the canonical representative mod \\\\(\\ell\\\\).","sig":null,"attributes":[{"value":"/ Check whether this `Scalar` is the canonical representative mod \\\\(\\ell\\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43364,"byte_end":43443,"line_start":1096,"line_end":1096,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43448,"byte_end":43451,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ This is intended for uses like input validation, where variable-time code is acceptable.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43456,"byte_end":43548,"line_start":1098,"line_end":1098,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43553,"byte_end":43556,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43561,"byte_end":43568,"line_start":1100,"line_end":1100,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43573,"byte_end":43609,"line_start":1101,"line_end":1101,"column_start":5,"column_end":41}},{"value":"/ # extern crate subtle;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43614,"byte_end":43640,"line_start":1102,"line_end":1102,"column_start":5,"column_end":31}},{"value":"/ # use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43645,"byte_end":43688,"line_start":1103,"line_end":1103,"column_start":5,"column_end":48}},{"value":"/ # use subtle::ConditionallySelectable;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43693,"byte_end":43735,"line_start":1104,"line_end":1104,"column_start":5,"column_end":47}},{"value":"/ # fn main() {","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43740,"byte_end":43757,"line_start":1105,"line_end":1105,"column_start":5,"column_end":22}},{"value":"/ // 2^255 - 1, since `from_bits` clears the high bit","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43762,"byte_end":43817,"line_start":1106,"line_end":1106,"column_start":5,"column_end":60}},{"value":"/ let _2_255_minus_1 = Scalar::from_bits([0xff;32]);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43822,"byte_end":43876,"line_start":1107,"line_end":1107,"column_start":5,"column_end":59}},{"value":"/ assert!(!_2_255_minus_1.is_canonical());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43881,"byte_end":43925,"line_start":1108,"line_end":1108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43930,"byte_end":43933,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ let reduced = _2_255_minus_1.reduce();","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43938,"byte_end":43980,"line_start":1110,"line_end":1110,"column_start":5,"column_end":47}},{"value":"/ assert!(reduced.is_canonical());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":43985,"byte_end":44021,"line_start":1111,"line_end":1111,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":44026,"byte_end":44033,"line_start":1112,"line_end":1112,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":44038,"byte_end":44045,"line_start":1113,"line_end":1113,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":269},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"montgomery","qualname":"::montgomery","value":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":1561},{"krate":0,"index":1573},{"krate":0,"index":1570},{"krate":0,"index":1568},{"krate":0,"index":1565},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":1574},{"krate":0,"index":1581},{"krate":0,"index":1579},{"krate":0,"index":1577},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":1588},{"krate":0,"index":1592},{"krate":0,"index":1595},{"krate":0,"index":1599},{"krate":0,"index":1603},{"krate":0,"index":334},{"krate":0,"index":340},{"krate":0,"index":343}],"decl_id":null,"docs":" Scalar multiplication on the Montgomery form of Curve25519.","sig":null,"attributes":[{"value":"/ Scalar multiplication on the Montgomery form of Curve25519.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":66595,"byte_end":66658,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":66659,"byte_end":66662,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ To avoid notational confusion with the Edwards code, we use","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":66663,"byte_end":66726,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"/ variables \\\\( u, v \\\\) for the Montgomery curve, so that “Montgomery","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":66727,"byte_end":66801,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ \\\\(u\\\\)” here corresponds to “Montgomery \\\\(x\\\\)” elsewhere.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":66802,"byte_end":66872,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":66873,"byte_end":66876,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Montgomery arithmetic works not on the curve itself, but on the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":66877,"byte_end":66944,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ \\\\(u\\\\)-line, which discards sign information and unifies the curve","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":66945,"byte_end":67016,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ and its quadratic twist.  See [_Montgomery curves and their","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67017,"byte_end":67080,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/ arithmetic_][costello-smith] by Costello and Smith for more details.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67081,"byte_end":67153,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67154,"byte_end":67157,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The `MontgomeryPoint` struct contains the affine \\\\(u\\\\)-coordinate","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67158,"byte_end":67229,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/ \\\\(u\\_0(P)\\\\) of a point \\\\(P\\\\) on either the curve or the twist.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67230,"byte_end":67300,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ Here the map \\\\(u\\_0 : \\mathcal M \\rightarrow \\mathbb F\\_p \\\\) is","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67301,"byte_end":67370,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ defined by \\\\(u\\_0((u,v)) = u\\\\); \\\\(u\\_0(\\mathcal O) = 0\\\\).  See","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67371,"byte_end":67441,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ section 5.4 of Costello-Smith for more details.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67442,"byte_end":67493,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67494,"byte_end":67497,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Scalar Multiplication","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67498,"byte_end":67525,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67526,"byte_end":67529,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Scalar multiplication on `MontgomeryPoint`s is provided by the `*`","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67530,"byte_end":67600,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ operator, which implements the Montgomery ladder.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67601,"byte_end":67654,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67655,"byte_end":67658,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Edwards Conversion","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67659,"byte_end":67683,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67684,"byte_end":67687,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The \\\\(2\\\\)-to-\\\\(1\\\\) map from the Edwards model to the Montgomery","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67688,"byte_end":67759,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ \\\\(u\\\\)-line is provided by `EdwardsPoint::to_montgomery()`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67760,"byte_end":67824,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67825,"byte_end":67828,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ To lift a `MontgomeryPoint` to an `EdwardsPoint`, use","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67829,"byte_end":67886,"line_start":38,"line_end":38,"column_start":1,"column_end":58}},{"value":"/ `MontgomeryPoint::to_edwards()`, which takes a sign parameter.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67887,"byte_end":67953,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/ This function rejects `MontgomeryPoints` which correspond to points","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":67954,"byte_end":68025,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/ on the twist.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":68026,"byte_end":68043,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":68044,"byte_end":68047,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [costello-smith]: https://eprint.iacr.org/2017/212.pdf","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":68048,"byte_end":68106,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":68388,"byte_end":68413,"line_start":49,"line_end":49,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1561},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":68932,"byte_end":68947,"line_start":70,"line_end":70,"column_start":12,"column_end":27},"name":"MontgomeryPoint","qualname":"::montgomery::MontgomeryPoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" Holds the \\\\(u\\\\)-coordinate of a point on the Montgomery form of\n Curve25519 or its twist.\n","sig":null,"attributes":[{"value":"/ Holds the \\\\(u\\\\)-coordinate of a point on the Montgomery form of","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":68709,"byte_end":68778,"line_start":66,"line_end":66,"column_start":1,"column_end":70}},{"value":"/ Curve25519 or its twist.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":68779,"byte_end":68807,"line_start":67,"line_end":67,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1563},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":68948,"byte_end":68960,"line_start":70,"line_end":70,"column_start":28,"column_end":40},"name":"0","qualname":"::montgomery::MontgomeryPoint::0","value":"[u8; 32]","parent":{"krate":0,"index":1561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69757,"byte_end":69765,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<MontgomeryPoint>::as_bytes","value":"pub fn as_bytes<'a>(&'a Self) -> &'a [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this `MontgomeryPoint` as an array of bytes.\n","sig":null,"attributes":[{"value":"/ View this `MontgomeryPoint` as an array of bytes.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69692,"byte_end":69745,"line_start":103,"line_end":103,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69893,"byte_end":69901,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<MontgomeryPoint>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert this `MontgomeryPoint` to an array of bytes.\n","sig":null,"attributes":[{"value":"/ Convert this `MontgomeryPoint` to an array of bytes.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69825,"byte_end":69881,"line_start":108,"line_end":108,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":70538,"byte_end":70548,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"to_edwards","qualname":"<MontgomeryPoint>::to_edwards","value":"pub fn to_edwards(&Self, u8) -> Option<EdwardsPoint>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert to an `EdwardsPoint`, using the supplied\n choice of sign for the `EdwardsPoint`.","sig":null,"attributes":[{"value":"/ Attempt to convert to an `EdwardsPoint`, using the supplied","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69949,"byte_end":70012,"line_start":113,"line_end":113,"column_start":5,"column_end":68}},{"value":"/ choice of sign for the `EdwardsPoint`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":70017,"byte_end":70059,"line_start":114,"line_end":114,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":70064,"byte_end":70067,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":70072,"byte_end":70084,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":70089,"byte_end":70092,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ * `sign`: a `u8` donating the desired sign of the resulting","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":70097,"byte_end":70160,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/   `EdwardsPoint`.  `0` denotes positive and `1` negative.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":70165,"byte_end":70226,"line_start":119,"line_end":119,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":70231,"byte_end":70234,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":70239,"byte_end":70251,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":70256,"byte_end":70259,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ * `Some(EdwardsPoint)` if `self` is the \\\\(u\\\\)-coordinate of a","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":70264,"byte_end":70331,"line_start":123,"line_end":123,"column_start":5,"column_end":72}},{"value":"/ point on (the Montgomery form of) Curve25519;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":70336,"byte_end":70385,"line_start":124,"line_end":124,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":70390,"byte_end":70393,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ * `None` if `self` is the \\\\(u\\\\)-coordinate of a point on the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":70398,"byte_end":70464,"line_start":126,"line_end":126,"column_start":5,"column_end":71}},{"value":"/ twist of (the Montgomery form of) Curve25519;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":70469,"byte_end":70518,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":70523,"byte_end":70526,"line_start":128,"line_end":128,"column_start":5,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":348},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"edwards","qualname":"::edwards","value":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":1606},{"krate":0,"index":1624},{"krate":0,"index":1621},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1610},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":1625},{"krate":0,"index":1632},{"krate":0,"index":1630},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":1633},{"krate":0,"index":1637},{"krate":0,"index":1641},{"krate":0,"index":492},{"krate":0,"index":1644},{"krate":0,"index":495},{"krate":0,"index":1646},{"krate":0,"index":1650},{"krate":0,"index":1654},{"krate":0,"index":500},{"krate":0,"index":1657},{"krate":0,"index":503},{"krate":0,"index":508},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":1659},{"krate":0,"index":1661},{"krate":0,"index":1665},{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1676},{"krate":0,"index":1680},{"krate":0,"index":518},{"krate":0,"index":523},{"krate":0,"index":528},{"krate":0,"index":533},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":549},{"krate":0,"index":1683},{"krate":0,"index":1687},{"krate":0,"index":551},{"krate":0,"index":555},{"krate":0,"index":560},{"krate":0,"index":565},{"krate":0,"index":569},{"krate":0,"index":574},{"krate":0,"index":576}],"decl_id":null,"docs":" Group operations for Curve25519, in Edwards form.","sig":null,"attributes":[{"value":"/ Group operations for Curve25519, in Edwards form.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":79490,"byte_end":79543,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":79544,"byte_end":79547,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Encoding and Decoding","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":79548,"byte_end":79576,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":79577,"byte_end":79580,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Encoding is done by converting to and from a `CompressedEdwardsY`","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":79581,"byte_end":79650,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ struct, which is a typed wrapper around `[u8; 32]`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":79651,"byte_end":79706,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":79707,"byte_end":79710,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Equality Testing","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":79711,"byte_end":79734,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":79735,"byte_end":79738,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The `EdwardsPoint` struct implements the `subtle::ConstantTimeEq`","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":79739,"byte_end":79808,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ trait for constant-time equality checking, and the Rust `Eq` trait","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":79809,"byte_end":79879,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ for variable-time equality checking.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":79880,"byte_end":79920,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":79921,"byte_end":79924,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## Cofactor-related functions","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":79925,"byte_end":79958,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":79959,"byte_end":79962,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The order of the group of points on the curve \\\\(\\mathcal E\\\\)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":79963,"byte_end":80029,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/ is \\\\(|\\mathcal E| = 8\\ell \\\\), so its structure is \\\\( \\mathcal","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80030,"byte_end":80098,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ E = \\mathcal E[8] \\times \\mathcal E[\\ell]\\\\).  The torsion","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80099,"byte_end":80161,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/ subgroup \\\\( \\mathcal E[8] \\\\) consists of eight points of small","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80162,"byte_end":80230,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ order.  Technically, all of \\\\(\\mathcal E\\\\) is torsion, but we","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80231,"byte_end":80298,"line_start":30,"line_end":30,"column_start":1,"column_end":68}},{"value":"/ use the word only to refer to the small \\\\(\\mathcal E[8]\\\\) part, not","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80299,"byte_end":80372,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ the large prime-order \\\\(\\mathcal E[\\ell]\\\\) part.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80373,"byte_end":80427,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80428,"byte_end":80431,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ To test if a point is in \\\\( \\mathcal E[8] \\\\), use","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80432,"byte_end":80487,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/ `EdwardsPoint::is_small_order()`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80488,"byte_end":80525,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80526,"byte_end":80529,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ To test if a point is in \\\\( \\mathcal E[\\ell] \\\\), use","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80530,"byte_end":80588,"line_start":37,"line_end":37,"column_start":1,"column_end":59}},{"value":"/ `EdwardsPoint::is_torsion_free()`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80589,"byte_end":80627,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80628,"byte_end":80631,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ To multiply by the cofactor, use `EdwardsPoint::mul_by_cofactor()`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80632,"byte_end":80703,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80704,"byte_end":80707,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ To avoid dealing with cofactors entirely, consider using Ristretto.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80708,"byte_end":80779,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80780,"byte_end":80783,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ## Scalars","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80784,"byte_end":80798,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80799,"byte_end":80802,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Scalars are represented by the `Scalar` struct.  To construct a scalar with a specific bit","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80803,"byte_end":80897,"line_start":46,"line_end":46,"column_start":1,"column_end":95}},{"value":"/ pattern, see `Scalar::from_bits()`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80898,"byte_end":80937,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80938,"byte_end":80941,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ## Scalar Multiplication","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80942,"byte_end":80970,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80971,"byte_end":80974,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Scalar multiplication on Edwards points is provided by:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":80975,"byte_end":81034,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81035,"byte_end":81038,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a `EdwardsPoint`, which","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81039,"byte_end":81108,"line_start":53,"line_end":53,"column_start":1,"column_end":70}},{"value":"/ performs constant-time variable-base scalar multiplication;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81109,"byte_end":81172,"line_start":54,"line_end":54,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81173,"byte_end":81176,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81177,"byte_end":81224,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ `EdwardsBasepointTable`, which performs constant-time fixed-base","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81225,"byte_end":81293,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ scalar multiplication;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81294,"byte_end":81320,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81321,"byte_end":81324,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81325,"byte_end":81355,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ [`MultiscalarMul`](../traits/trait.MultiscalarMul.html) trait for","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81356,"byte_end":81425,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ constant-time variable-base multiscalar multiplication;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81426,"byte_end":81485,"line_start":62,"line_end":62,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81486,"byte_end":81489,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81490,"byte_end":81520,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/ [`VartimeMultiscalarMul`](../traits/trait.VartimeMultiscalarMul.html)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81521,"byte_end":81594,"line_start":65,"line_end":65,"column_start":1,"column_end":74}},{"value":"/ trait for variable-time variable-base multiscalar multiplication;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81595,"byte_end":81664,"line_start":66,"line_end":66,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81665,"byte_end":81668,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ## Implementation","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81669,"byte_end":81690,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81691,"byte_end":81694,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The Edwards arithmetic is implemented using the “extended twisted","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81695,"byte_end":81766,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/ coordinates” of Hisil, Wong, Carter, and Dawson, and the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81767,"byte_end":81829,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"/ corresponding complete formulas.  For more details,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81830,"byte_end":81885,"line_start":72,"line_end":72,"column_start":1,"column_end":56}},{"value":"/ see the [`curve_models` submodule][curve_models]","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81886,"byte_end":81938,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ of the internal documentation.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81939,"byte_end":81973,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81974,"byte_end":81977,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Validity Checking","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":81978,"byte_end":82002,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":82003,"byte_end":82006,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ There is no function for checking whether a point is valid.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":82007,"byte_end":82070,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/ Instead, the `EdwardsPoint` struct is guaranteed to hold a valid","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":82071,"byte_end":82139,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/ point on the curve.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":82140,"byte_end":82163,"line_start":80,"line_end":80,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":82164,"byte_end":82167,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ We use the Rust type system to make invalid points","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":82168,"byte_end":82222,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/ unrepresentable: `EdwardsPoint` objects can only be created via","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":82223,"byte_end":82290,"line_start":83,"line_end":83,"column_start":1,"column_end":68}},{"value":"/ successful decompression of a compressed point, or else by","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":82291,"byte_end":82353,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/ operations on other (valid) `EdwardsPoint`s.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":82354,"byte_end":82402,"line_start":85,"line_end":85,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":82403,"byte_end":82406,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [curve_models]: https://doc-internal.dalek.rs/curve25519_dalek/backend/serial/curve_models/index.html","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":82407,"byte_end":82512,"line_start":87,"line_end":87,"column_start":1,"column_end":106}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":82794,"byte_end":82819,"line_start":93,"line_end":93,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":84585,"byte_end":84603,"line_start":154,"line_end":154,"column_start":12,"column_end":30},"name":"CompressedEdwardsY","qualname":"::edwards::CompressedEdwardsY","value":"","parent":null,"children":[],"decl_id":null,"docs":" In \"Edwards y\" / \"Ed25519\" format, the curve point \\\\((x,y)\\\\) is\n determined by the \\\\(y\\\\)-coordinate and the sign of \\\\(x\\\\).","sig":null,"attributes":[{"value":"/ In \"Edwards y\" / \"Ed25519\" format, the curve point \\\\((x,y)\\\\) is","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":84245,"byte_end":84314,"line_start":148,"line_end":148,"column_start":1,"column_end":70}},{"value":"/ determined by the \\\\(y\\\\)-coordinate and the sign of \\\\(x\\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":84315,"byte_end":84380,"line_start":149,"line_end":149,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":84381,"byte_end":84384,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ The first 255 bits of a `CompressedEdwardsY` represent the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":84385,"byte_end":84447,"line_start":151,"line_end":151,"column_start":1,"column_end":63}},{"value":"/ \\\\(y\\\\)-coordinate.  The high bit of the 32nd byte gives the sign of \\\\(x\\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":84448,"byte_end":84529,"line_start":152,"line_end":152,"column_start":1,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1608},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":84604,"byte_end":84616,"line_start":154,"line_end":154,"column_start":31,"column_end":43},"name":"0","qualname":"::edwards::CompressedEdwardsY::0","value":"[u8; 32]","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":85063,"byte_end":85071,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<CompressedEdwardsY>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this `CompressedEdwardsY` as an array of bytes.\n","sig":null,"attributes":[{"value":"/ View this `CompressedEdwardsY` as an array of bytes.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":84995,"byte_end":85051,"line_start":169,"line_end":169,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":85189,"byte_end":85197,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<CompressedEdwardsY>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Copy this `CompressedEdwardsY` to an array of bytes.\n","sig":null,"attributes":[{"value":"/ Copy this `CompressedEdwardsY` to an array of bytes.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":85121,"byte_end":85177,"line_start":174,"line_end":174,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":85404,"byte_end":85414,"line_start":183,"line_end":183,"column_start":12,"column_end":22},"name":"decompress","qualname":"<CompressedEdwardsY>::decompress","value":"pub fn decompress(&Self) -> Option<EdwardsPoint>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decompress to an `EdwardsPoint`.","sig":null,"attributes":[{"value":"/ Attempt to decompress to an `EdwardsPoint`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":85245,"byte_end":85292,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":85297,"byte_end":85300,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input is not the \\\\(y\\\\)-coordinate of a","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":85305,"byte_end":85371,"line_start":181,"line_end":181,"column_start":5,"column_end":71}},{"value":"/ curve point.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":85376,"byte_end":85392,"line_start":182,"line_end":182,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":90018,"byte_end":90030,"line_start":312,"line_end":312,"column_start":12,"column_end":24},"name":"EdwardsPoint","qualname":"::edwards::EdwardsPoint","value":"EdwardsPoint {  }","parent":null,"children":[{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1629}],"decl_id":null,"docs":" An `EdwardsPoint` represents a point on the Edwards form of Curve25519.\n","sig":null,"attributes":[{"value":"/ An `EdwardsPoint` represents a point on the Edwards form of Curve25519.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":89885,"byte_end":89960,"line_start":309,"line_end":309,"column_start":1,"column_end":76}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":89984,"byte_end":90006,"line_start":311,"line_end":311,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":90958,"byte_end":90968,"line_start":344,"line_end":344,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<CompressedEdwardsY>::from_slice","value":"pub fn from_slice(&[u8]) -> CompressedEdwardsY","parent":null,"children":[],"decl_id":null,"docs":" Construct a `CompressedEdwardsY` from a slice of bytes.","sig":null,"attributes":[{"value":"/ Construct a `CompressedEdwardsY` from a slice of bytes.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":90789,"byte_end":90848,"line_start":339,"line_end":339,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":90853,"byte_end":90856,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":90861,"byte_end":90873,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":90878,"byte_end":90881,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ If the input `bytes` slice does not have a length of 32.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":90886,"byte_end":90946,"line_start":343,"line_end":343,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":95187,"byte_end":95200,"line_start":473,"line_end":473,"column_start":12,"column_end":25},"name":"to_montgomery","qualname":"<EdwardsPoint>::to_montgomery","value":"pub fn to_montgomery(&Self) -> MontgomeryPoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this `EdwardsPoint` on the Edwards model to the\n corresponding `MontgomeryPoint` on the Montgomery model.","sig":null,"attributes":[{"value":"/ Convert this `EdwardsPoint` on the Edwards model to the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":94746,"byte_end":94805,"line_start":464,"line_end":464,"column_start":5,"column_end":64}},{"value":"/ corresponding `MontgomeryPoint` on the Montgomery model.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":94810,"byte_end":94870,"line_start":465,"line_end":465,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":94875,"byte_end":94878,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ This function has one exceptional case; the identity point of","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":94883,"byte_end":94948,"line_start":467,"line_end":467,"column_start":5,"column_end":70}},{"value":"/ the Edwards curve is sent to the 2-torsion point \\\\((0,0)\\\\)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":94953,"byte_end":95017,"line_start":468,"line_end":468,"column_start":5,"column_end":69}},{"value":"/ on the Montgomery curve.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":95022,"byte_end":95050,"line_start":469,"line_end":469,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":95055,"byte_end":95058,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Note that this is a one-way conversion, since the Montgomery","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":95063,"byte_end":95127,"line_start":471,"line_end":471,"column_start":5,"column_end":69}},{"value":"/ model does not retain sign information.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":95132,"byte_end":95175,"line_start":472,"line_end":472,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":95697,"byte_end":95705,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"compress","qualname":"<EdwardsPoint>::compress","value":"pub fn compress(&Self) -> CompressedEdwardsY","parent":null,"children":[],"decl_id":null,"docs":" Compress this point to `CompressedEdwardsY` format.\n","sig":null,"attributes":[{"value":"/ Compress this point to `CompressedEdwardsY` format.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":95630,"byte_end":95685,"line_start":485,"line_end":485,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":538},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":102361,"byte_end":102389,"line_start":703,"line_end":703,"column_start":12,"column_end":40},"name":"VartimeEdwardsPrecomputation","qualname":"::edwards::VartimeEdwardsPrecomputation","value":"","parent":null,"children":[],"decl_id":null,"docs":" Precomputation for variable-time multiscalar multiplication with `EdwardsPoint`s.\n","sig":null,"attributes":[{"value":"/ Precomputation for variable-time multiscalar multiplication with `EdwardsPoint`s.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":102086,"byte_end":102171,"line_start":698,"line_end":698,"column_start":1,"column_end":86}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":102324,"byte_end":102349,"line_start":702,"line_end":702,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":103393,"byte_end":103428,"line_start":737,"line_end":737,"column_start":12,"column_end":47},"name":"vartime_double_scalar_mul_basepoint","qualname":"<EdwardsPoint>::vartime_double_scalar_mul_basepoint","value":"pub fn vartime_double_scalar_mul_basepoint(&Scalar, &EdwardsPoint, &Scalar)\n-> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the Ed25519 basepoint.\n","sig":null,"attributes":[{"value":"/ Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the Ed25519 basepoint.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":103298,"byte_end":103381,"line_start":736,"line_end":736,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":1683},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":103897,"byte_end":103918,"line_start":753,"line_end":753,"column_start":12,"column_end":33},"name":"EdwardsBasepointTable","qualname":"::edwards::EdwardsBasepointTable","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, for accelerating\n fixed-base scalar multiplication.  One table, for the Ed25519\n basepoint, is provided in the `constants` module.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, for accelerating","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":103583,"byte_end":103652,"line_start":746,"line_end":746,"column_start":1,"column_end":70}},{"value":"/ fixed-base scalar multiplication.  One table, for the Ed25519","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":103653,"byte_end":103718,"line_start":747,"line_end":747,"column_start":1,"column_end":66}},{"value":"/ basepoint, is provided in the `constants` module.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":103719,"byte_end":103772,"line_start":748,"line_end":748,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":103773,"byte_end":103776,"line_start":749,"line_end":749,"column_start":1,"column_end":4}},{"value":"/ The basepoint tables are reasonably large (30KB), so they should","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":103777,"byte_end":103845,"line_start":750,"line_end":750,"column_start":1,"column_end":69}},{"value":"/ probably be boxed.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":103846,"byte_end":103868,"line_start":751,"line_end":751,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":106629,"byte_end":106635,"line_start":826,"line_end":826,"column_start":12,"column_end":18},"name":"create","qualname":"<EdwardsBasepointTable>::create","value":"pub fn create(&EdwardsPoint) -> EdwardsBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Create a table of precomputed multiples of `basepoint`.\n","sig":null,"attributes":[{"value":"/ Create a table of precomputed multiples of `basepoint`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":106558,"byte_end":106617,"line_start":825,"line_end":825,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":107072,"byte_end":107081,"line_start":839,"line_end":839,"column_start":12,"column_end":21},"name":"basepoint","qualname":"<EdwardsBasepointTable>::basepoint","value":"pub fn basepoint(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Get the basepoint for this table as an `EdwardsPoint`.\n","sig":null,"attributes":[{"value":"/ Get the basepoint for this table as an `EdwardsPoint`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":107002,"byte_end":107060,"line_start":838,"line_end":838,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":107400,"byte_end":107415,"line_start":848,"line_end":848,"column_start":12,"column_end":27},"name":"mul_by_cofactor","qualname":"<EdwardsPoint>::mul_by_cofactor","value":"pub fn mul_by_cofactor(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Multiply by the cofactor: return \\\\([8]P\\\\).\n","sig":null,"attributes":[{"value":"/ Multiply by the cofactor: return \\\\([8]P\\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":107340,"byte_end":107388,"line_start":847,"line_end":847,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108648,"byte_end":108662,"line_start":887,"line_end":887,"column_start":12,"column_end":26},"name":"is_small_order","qualname":"<EdwardsPoint>::is_small_order","value":"pub fn is_small_order(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if this point is of small order.","sig":null,"attributes":[{"value":"/ Determine if this point is of small order.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":107933,"byte_end":107979,"line_start":864,"line_end":864,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":107984,"byte_end":107987,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":107992,"byte_end":108004,"line_start":866,"line_end":866,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108009,"byte_end":108012,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ * `true` if `self` is in the torsion subgroup \\\\( \\mathcal E[8] \\\\);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108017,"byte_end":108089,"line_start":868,"line_end":868,"column_start":5,"column_end":77}},{"value":"/ * `false` if `self` is not in the torsion subgroup \\\\( \\mathcal E[8] \\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108094,"byte_end":108171,"line_start":869,"line_end":869,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108176,"byte_end":108179,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108184,"byte_end":108197,"line_start":871,"line_end":871,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108202,"byte_end":108205,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108210,"byte_end":108217,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108222,"byte_end":108258,"line_start":874,"line_end":874,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108263,"byte_end":108266,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ // Generator of the prime-order subgroup","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108271,"byte_end":108315,"line_start":876,"line_end":876,"column_start":5,"column_end":49}},{"value":"/ let P = constants::ED25519_BASEPOINT_POINT;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108320,"byte_end":108367,"line_start":877,"line_end":877,"column_start":5,"column_end":52}},{"value":"/ // Generator of the torsion subgroup","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108372,"byte_end":108412,"line_start":878,"line_end":878,"column_start":5,"column_end":45}},{"value":"/ let Q = constants::EIGHT_TORSION[1];","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108417,"byte_end":108457,"line_start":879,"line_end":879,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108462,"byte_end":108465,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ // P has large order","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108470,"byte_end":108494,"line_start":881,"line_end":881,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(P.is_small_order(), false);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108499,"byte_end":108541,"line_start":882,"line_end":882,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108546,"byte_end":108549,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ // Q has small order","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108554,"byte_end":108578,"line_start":884,"line_end":884,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Q.is_small_order(), true);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108583,"byte_end":108624,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108629,"byte_end":108636,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109572,"byte_end":109587,"line_start":917,"line_end":917,"column_start":12,"column_end":27},"name":"is_torsion_free","qualname":"<EdwardsPoint>::is_torsion_free","value":"pub fn is_torsion_free(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if this point is “torsion-free”, i.e., is contained in\n the prime-order subgroup.","sig":null,"attributes":[{"value":"/ Determine if this point is “torsion-free”, i.e., is contained in","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108736,"byte_end":108808,"line_start":891,"line_end":891,"column_start":5,"column_end":73}},{"value":"/ the prime-order subgroup.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108813,"byte_end":108842,"line_start":892,"line_end":892,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108847,"byte_end":108850,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108855,"byte_end":108867,"line_start":894,"line_end":894,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108872,"byte_end":108875,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ * `true` if `self` has zero torsion component and is in the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108880,"byte_end":108943,"line_start":896,"line_end":896,"column_start":5,"column_end":68}},{"value":"/ prime-order subgroup;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108948,"byte_end":108973,"line_start":897,"line_end":897,"column_start":5,"column_end":30}},{"value":"/ * `false` if `self` has a nonzero torsion component and is not","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":108978,"byte_end":109044,"line_start":898,"line_end":898,"column_start":5,"column_end":71}},{"value":"/ in the prime-order subgroup.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109049,"byte_end":109081,"line_start":899,"line_end":899,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109086,"byte_end":109089,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109094,"byte_end":109107,"line_start":901,"line_end":901,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109112,"byte_end":109115,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109120,"byte_end":109127,"line_start":903,"line_end":903,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109132,"byte_end":109168,"line_start":904,"line_end":904,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109173,"byte_end":109176,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ // Generator of the prime-order subgroup","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109181,"byte_end":109225,"line_start":906,"line_end":906,"column_start":5,"column_end":49}},{"value":"/ let P = constants::ED25519_BASEPOINT_POINT;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109230,"byte_end":109277,"line_start":907,"line_end":907,"column_start":5,"column_end":52}},{"value":"/ // Generator of the torsion subgroup","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109282,"byte_end":109322,"line_start":908,"line_end":908,"column_start":5,"column_end":45}},{"value":"/ let Q = constants::EIGHT_TORSION[1];","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109327,"byte_end":109367,"line_start":909,"line_end":909,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109372,"byte_end":109375,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ // P is torsion-free","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109380,"byte_end":109404,"line_start":911,"line_end":911,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(P.is_torsion_free(), true);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109409,"byte_end":109451,"line_start":912,"line_end":912,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109456,"byte_end":109459,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ // P + Q is not torsion-free","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109464,"byte_end":109496,"line_start":914,"line_end":914,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((P+Q).is_torsion_free(), false);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109501,"byte_end":109548,"line_start":915,"line_end":915,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109553,"byte_end":109560,"line_start":916,"line_end":916,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":578},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ristretto","qualname":"::ristretto","value":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":660},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":1689},{"krate":0,"index":1707},{"krate":0,"index":1704},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1693},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":1708},{"krate":0,"index":1713},{"krate":0,"index":1711},{"krate":0,"index":684},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":1726},{"krate":0,"index":1730},{"krate":0,"index":1734},{"krate":0,"index":728},{"krate":0,"index":1737},{"krate":0,"index":731},{"krate":0,"index":1739},{"krate":0,"index":1743},{"krate":0,"index":1747},{"krate":0,"index":736},{"krate":0,"index":1750},{"krate":0,"index":739},{"krate":0,"index":744},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":759},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1758},{"krate":0,"index":1762},{"krate":0,"index":1765},{"krate":0,"index":1769},{"krate":0,"index":1773},{"krate":0,"index":764},{"krate":0,"index":770},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":791},{"krate":0,"index":1776},{"krate":0,"index":1779},{"krate":0,"index":793},{"krate":0,"index":798},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":810}],"decl_id":null,"docs":" An implementation of [Ristretto][ristretto_main], which provides a\n prime-order group.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":129417,"byte_end":129442,"line_start":15,"line_end":15,"column_start":1,"column_end":26}},{"value":"/ An implementation of [Ristretto][ristretto_main], which provides a","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":129444,"byte_end":129514,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ prime-order group.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":129515,"byte_end":129537,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":129538,"byte_end":129541,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # The Ristretto Group","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":129542,"byte_end":129567,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":129568,"byte_end":129571,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Ristretto is a modification of Mike Hamburg's Decaf scheme to work","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":129572,"byte_end":129642,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ with cofactor-\\\\(8\\\\) curves, such as Curve25519.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":129643,"byte_end":129696,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":129697,"byte_end":129700,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The introduction of the Decaf paper, [_Decaf:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":129701,"byte_end":129750,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/ Eliminating cofactors through point","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":129751,"byte_end":129790,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ compression_](https://eprint.iacr.org/2015/673.pdf), notes that while","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":129791,"byte_end":129864,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ most cryptographic systems require a group of prime order, most","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":129865,"byte_end":129932,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/ concrete implementations using elliptic curve groups fall short –","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":129933,"byte_end":130004,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/ they either provide a group of prime order, but with incomplete or","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130005,"byte_end":130075,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ variable-time addition formulae (for instance, most Weierstrass","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130076,"byte_end":130143,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/ models), or else they provide a fast and safe implementation of a","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130144,"byte_end":130213,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/ group whose order is not quite a prime \\\\(q\\\\), but \\\\(hq\\\\) for a","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130214,"byte_end":130284,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ small cofactor \\\\(h\\\\) (for instance, Edwards curves, which have","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130285,"byte_end":130353,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ cofactor at least \\\\(4\\\\)).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130354,"byte_end":130385,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130386,"byte_end":130389,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This abstraction mismatch is commonly “handled” by pushing the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130390,"byte_end":130460,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ complexity upwards, adding ad-hoc protocol modifications.  But","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130461,"byte_end":130527,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ these modifications require careful analysis and are a recurring","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130528,"byte_end":130596,"line_start":39,"line_end":39,"column_start":1,"column_end":69}},{"value":"/ source of [vulnerabilities][cryptonote] and [design","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130597,"byte_end":130652,"line_start":40,"line_end":40,"column_start":1,"column_end":56}},{"value":"/ complications][ed25519_hkd].","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130653,"byte_end":130685,"line_start":41,"line_end":41,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130686,"byte_end":130689,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Instead, Decaf (and Ristretto) use a quotient group to implement a","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130690,"byte_end":130760,"line_start":43,"line_end":43,"column_start":1,"column_end":71}},{"value":"/ prime-order group using a non-prime-order curve.  This provides","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130761,"byte_end":130828,"line_start":44,"line_end":44,"column_start":1,"column_end":68}},{"value":"/ the correct abstraction for cryptographic systems, while retaining","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130829,"byte_end":130899,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ the speed and safety benefits of an Edwards curve.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130900,"byte_end":130954,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130955,"byte_end":130958,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Decaf is named “after the procedure which divides the effect of","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":130959,"byte_end":131028,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ coffee by \\\\(4\\\\)”.  However, Curve25519 has a cofactor of","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131029,"byte_end":131093,"line_start":49,"line_end":49,"column_start":1,"column_end":63}},{"value":"/ \\\\(8\\\\).  To eliminate its cofactor, Ristretto restricts further;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131094,"byte_end":131163,"line_start":50,"line_end":50,"column_start":1,"column_end":70}},{"value":"/ this [additional restriction][ristretto_coffee] gives the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131164,"byte_end":131225,"line_start":51,"line_end":51,"column_start":1,"column_end":62}},{"value":"/ _Ristretto_ encoding.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131226,"byte_end":131251,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131252,"byte_end":131255,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ More details on why Ristretto is necessary can be found in the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131256,"byte_end":131322,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ [Why Ristretto?][why_ristretto] section of the Ristretto website.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131323,"byte_end":131392,"line_start":55,"line_end":55,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131393,"byte_end":131396,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Ristretto","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131397,"byte_end":131410,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/ points are provided in `curve25519-dalek` by the `RistrettoPoint`","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131411,"byte_end":131480,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/ struct.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131481,"byte_end":131492,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131493,"byte_end":131496,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ## Encoding and Decoding","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131497,"byte_end":131525,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131526,"byte_end":131529,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Encoding is done by converting to and from a `CompressedRistretto`","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131530,"byte_end":131600,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/ struct, which is a typed wrapper around `[u8; 32]`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131601,"byte_end":131656,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131657,"byte_end":131660,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The encoding is not batchable, but it is possible to","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131661,"byte_end":131717,"line_start":66,"line_end":66,"column_start":1,"column_end":57}},{"value":"/ double-and-encode in a batch using","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131718,"byte_end":131756,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ `RistrettoPoint::double_and_compress_batch`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131757,"byte_end":131805,"line_start":68,"line_end":68,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131806,"byte_end":131809,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ## Equality Testing","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131810,"byte_end":131833,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131834,"byte_end":131837,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Testing equality of points on an Edwards curve in projective","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131838,"byte_end":131902,"line_start":72,"line_end":72,"column_start":1,"column_end":65}},{"value":"/ coordinates requires an expensive inversion.  By contrast, equality","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131903,"byte_end":131974,"line_start":73,"line_end":73,"column_start":1,"column_end":72}},{"value":"/ checking in the Ristretto group can be done in projective","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":131975,"byte_end":132036,"line_start":74,"line_end":74,"column_start":1,"column_end":62}},{"value":"/ coordinates without requiring an inversion, so it is much faster.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132037,"byte_end":132106,"line_start":75,"line_end":75,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132107,"byte_end":132110,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ The `RistrettoPoint` struct implements the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132111,"byte_end":132157,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/ `subtle::ConstantTimeEq` trait for constant-time equality","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132158,"byte_end":132219,"line_start":78,"line_end":78,"column_start":1,"column_end":62}},{"value":"/ checking, and the Rust `Eq` trait for variable-time equality","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132220,"byte_end":132284,"line_start":79,"line_end":79,"column_start":1,"column_end":65}},{"value":"/ checking.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132285,"byte_end":132298,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132299,"byte_end":132302,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ## Scalars","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132303,"byte_end":132317,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132318,"byte_end":132321,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Scalars are represented by the `Scalar` struct.  Each scalar has a","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132322,"byte_end":132392,"line_start":84,"line_end":84,"column_start":1,"column_end":71}},{"value":"/ canonical representative mod the group order.  To attempt to load","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132393,"byte_end":132462,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/ a supposedly-canonical scalar, use","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132463,"byte_end":132501,"line_start":86,"line_end":86,"column_start":1,"column_end":39}},{"value":"/ `Scalar::from_canonical_bytes()`. To check whether a","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132502,"byte_end":132558,"line_start":87,"line_end":87,"column_start":1,"column_end":57}},{"value":"/ representative is canonical, use `Scalar::is_canonical()`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132559,"byte_end":132621,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132622,"byte_end":132625,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ## Scalar Multiplication","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132626,"byte_end":132654,"line_start":90,"line_end":90,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132655,"byte_end":132658,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Scalar multiplication on Ristretto points is provided by:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132659,"byte_end":132720,"line_start":92,"line_end":92,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132721,"byte_end":132724,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a `RistrettoPoint`, which","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132725,"byte_end":132796,"line_start":94,"line_end":94,"column_start":1,"column_end":72}},{"value":"/ performs constant-time variable-base scalar multiplication;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132797,"byte_end":132860,"line_start":95,"line_end":95,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132861,"byte_end":132864,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132865,"byte_end":132912,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/ `RistrettoBasepointTable`, which performs constant-time fixed-base","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132913,"byte_end":132983,"line_start":98,"line_end":98,"column_start":1,"column_end":71}},{"value":"/ scalar multiplication;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":132984,"byte_end":133010,"line_start":99,"line_end":99,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133011,"byte_end":133014,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133015,"byte_end":133045,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/ [`MultiscalarMul`](../traits/trait.MultiscalarMul.html) trait for","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133046,"byte_end":133115,"line_start":102,"line_end":102,"column_start":1,"column_end":70}},{"value":"/ constant-time variable-base multiscalar multiplication;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133116,"byte_end":133175,"line_start":103,"line_end":103,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133176,"byte_end":133179,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133180,"byte_end":133210,"line_start":105,"line_end":105,"column_start":1,"column_end":31}},{"value":"/ [`VartimeMultiscalarMul`](../traits/trait.VartimeMultiscalarMul.html)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133211,"byte_end":133284,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ trait for variable-time variable-base multiscalar multiplication;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133285,"byte_end":133354,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133355,"byte_end":133358,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ## Random Points and Hashing to Ristretto","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133359,"byte_end":133404,"line_start":109,"line_end":109,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133405,"byte_end":133408,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ The Ristretto group comes equipped with an Elligator map.  This is","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133409,"byte_end":133479,"line_start":111,"line_end":111,"column_start":1,"column_end":71}},{"value":"/ used to implement","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133480,"byte_end":133501,"line_start":112,"line_end":112,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133502,"byte_end":133505,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ * `RistrettoPoint::random()`, which generates random points from an","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133506,"byte_end":133577,"line_start":114,"line_end":114,"column_start":1,"column_end":72}},{"value":"/ RNG;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133578,"byte_end":133586,"line_start":115,"line_end":115,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133587,"byte_end":133590,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ * `RistrettoPoint::from_hash()` and","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133591,"byte_end":133630,"line_start":117,"line_end":117,"column_start":1,"column_end":40}},{"value":"/ `RistrettoPoint::hash_from_bytes()`, which perform hashing to the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133631,"byte_end":133700,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/ group.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133701,"byte_end":133711,"line_start":119,"line_end":119,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133712,"byte_end":133715,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ The Elligator map itself is not currently exposed.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133716,"byte_end":133770,"line_start":121,"line_end":121,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133771,"byte_end":133774,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ## Implementation","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133775,"byte_end":133796,"line_start":123,"line_end":123,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133797,"byte_end":133800,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ The Decaf suggestion is to use a quotient group, such as \\\\(\\mathcal","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133801,"byte_end":133873,"line_start":125,"line_end":125,"column_start":1,"column_end":73}},{"value":"/ E / \\mathcal E[4]\\\\) or \\\\(2 \\mathcal E / \\mathcal E[2] \\\\), to","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133874,"byte_end":133941,"line_start":126,"line_end":126,"column_start":1,"column_end":68}},{"value":"/ implement a prime-order group using a non-prime-order curve.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":133942,"byte_end":134006,"line_start":127,"line_end":127,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134007,"byte_end":134010,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This requires only changing","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134011,"byte_end":134042,"line_start":129,"line_end":129,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134043,"byte_end":134046,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ 1. the function for equality checking (so that two representatives","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134047,"byte_end":134117,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/    of the same coset are considered equal);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134118,"byte_end":134165,"line_start":132,"line_end":132,"column_start":1,"column_end":48}},{"value":"/ 2. the function for encoding (so that two representatives of the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134166,"byte_end":134234,"line_start":133,"line_end":133,"column_start":1,"column_end":69}},{"value":"/    same coset are encoded as identical bitstrings);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134235,"byte_end":134290,"line_start":134,"line_end":134,"column_start":1,"column_end":56}},{"value":"/ 3. the function for decoding (so that only the canonical encoding of","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134291,"byte_end":134363,"line_start":135,"line_end":135,"column_start":1,"column_end":73}},{"value":"/    a coset is accepted).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134364,"byte_end":134392,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134393,"byte_end":134396,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Internally, each coset is represented by a curve point; two points","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134397,"byte_end":134467,"line_start":138,"line_end":138,"column_start":1,"column_end":71}},{"value":"/ \\\\( P, Q \\\\) may represent the same coset in the same way that two","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134468,"byte_end":134538,"line_start":139,"line_end":139,"column_start":1,"column_end":71}},{"value":"/ points with different \\\\(X,Y,Z\\\\) coordinates may represent the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134539,"byte_end":134606,"line_start":140,"line_end":140,"column_start":1,"column_end":68}},{"value":"/ same point.  The group operations are carried out with no overhead","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134607,"byte_end":134677,"line_start":141,"line_end":141,"column_start":1,"column_end":71}},{"value":"/ using Edwards formulas.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134678,"byte_end":134705,"line_start":142,"line_end":142,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134706,"byte_end":134709,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ Notes on the details of the encoding can be found in the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134710,"byte_end":134770,"line_start":144,"line_end":144,"column_start":1,"column_end":61}},{"value":"/ [Details][ristretto_notes] section of the Ristretto website.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134771,"byte_end":134835,"line_start":145,"line_end":145,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134836,"byte_end":134839,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [cryptonote]:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134840,"byte_end":134857,"line_start":147,"line_end":147,"column_start":1,"column_end":18}},{"value":"/ https://moderncrypto.org/mail-archive/curves/2017/000898.html","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134858,"byte_end":134923,"line_start":148,"line_end":148,"column_start":1,"column_end":66}},{"value":"/ [ed25519_hkd]:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134924,"byte_end":134942,"line_start":149,"line_end":149,"column_start":1,"column_end":19}},{"value":"/ https://moderncrypto.org/mail-archive/curves/2017/000858.html","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":134943,"byte_end":135008,"line_start":150,"line_end":150,"column_start":1,"column_end":66}},{"value":"/ [ristretto_coffee]:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":135009,"byte_end":135032,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/ https://en.wikipedia.org/wiki/Ristretto","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":135033,"byte_end":135076,"line_start":152,"line_end":152,"column_start":1,"column_end":44}},{"value":"/ [ristretto_notes]:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":135077,"byte_end":135099,"line_start":153,"line_end":153,"column_start":1,"column_end":23}},{"value":"/ https://ristretto.group/details/index.html","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":135100,"byte_end":135146,"line_start":154,"line_end":154,"column_start":1,"column_end":47}},{"value":"/ [why_ristretto]:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":135147,"byte_end":135167,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/ https://ristretto.group/why_ristretto.html","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":135168,"byte_end":135214,"line_start":156,"line_end":156,"column_start":1,"column_end":47}},{"value":"/ [ristretto_main]:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":135215,"byte_end":135236,"line_start":157,"line_end":157,"column_start":1,"column_end":22}},{"value":"/ https://ristretto.group/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":135237,"byte_end":135265,"line_start":158,"line_end":158,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":136673,"byte_end":136692,"line_start":212,"line_end":212,"column_start":12,"column_end":31},"name":"CompressedRistretto","qualname":"::ristretto::CompressedRistretto","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Ristretto point, in compressed wire format.","sig":null,"attributes":[{"value":"/ A Ristretto point, in compressed wire format.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":136453,"byte_end":136502,"line_start":207,"line_end":207,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":136503,"byte_end":136506,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ The Ristretto encoding is canonical, so two points are equal if and","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":136507,"byte_end":136578,"line_start":209,"line_end":209,"column_start":1,"column_end":72}},{"value":"/ only if their encodings are equal.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":136579,"byte_end":136617,"line_start":210,"line_end":210,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1691},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":136693,"byte_end":136705,"line_start":212,"line_end":212,"column_start":32,"column_end":44},"name":"0","qualname":"::ristretto::CompressedRistretto::0","value":"[u8; 32]","parent":{"krate":0,"index":1689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":136965,"byte_end":136973,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<CompressedRistretto>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Copy the bytes of this `CompressedRistretto`.\n","sig":null,"attributes":[{"value":"/ Copy the bytes of this `CompressedRistretto`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":136904,"byte_end":136953,"line_start":221,"line_end":221,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":137090,"byte_end":137098,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<CompressedRistretto>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this `CompressedRistretto` as an array of bytes.\n","sig":null,"attributes":[{"value":"/ View this `CompressedRistretto` as an array of bytes.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":137021,"byte_end":137078,"line_start":226,"line_end":226,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":137318,"byte_end":137328,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<CompressedRistretto>::from_slice","value":"pub fn from_slice(&[u8]) -> CompressedRistretto","parent":null,"children":[],"decl_id":null,"docs":" Construct a `CompressedRistretto` from a slice of bytes.","sig":null,"attributes":[{"value":"/ Construct a `CompressedRistretto` from a slice of bytes.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":137148,"byte_end":137208,"line_start":231,"line_end":231,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":137213,"byte_end":137216,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":137221,"byte_end":137233,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":137238,"byte_end":137241,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ If the input `bytes` slice does not have a length of 32.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":137246,"byte_end":137306,"line_start":235,"line_end":235,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":137737,"byte_end":137747,"line_start":251,"line_end":251,"column_start":12,"column_end":22},"name":"decompress","qualname":"<CompressedRistretto>::decompress","value":"pub fn decompress(&Self) -> Option<RistrettoPoint>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decompress to an `RistrettoPoint`.","sig":null,"attributes":[{"value":"/ Attempt to decompress to an `RistrettoPoint`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":137483,"byte_end":137532,"line_start":244,"line_end":244,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":137537,"byte_end":137540,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":137545,"byte_end":137557,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":137562,"byte_end":137565,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ - `Some(RistrettoPoint)` if `self` was the canonical encoding of a point;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":137570,"byte_end":137647,"line_start":248,"line_end":248,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":137652,"byte_end":137655,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ - `None` if `self` was not the canonical encoding of a point.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":137660,"byte_end":137725,"line_start":250,"line_end":250,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1708},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":144377,"byte_end":144391,"line_start":438,"line_end":438,"column_start":12,"column_end":26},"name":"RistrettoPoint","qualname":"::ristretto::RistrettoPoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `RistrettoPoint` represents a point in the Ristretto group for\n Curve25519.  Ristretto, a variant of Decaf, constructs a\n prime-order group as a quotient group of a subgroup of (the\n Edwards form of) Curve25519.","sig":null,"attributes":[{"value":"/ A `RistrettoPoint` represents a point in the Ristretto group for","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":143807,"byte_end":143875,"line_start":426,"line_end":426,"column_start":1,"column_end":69}},{"value":"/ Curve25519.  Ristretto, a variant of Decaf, constructs a","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":143876,"byte_end":143936,"line_start":427,"line_end":427,"column_start":1,"column_end":61}},{"value":"/ prime-order group as a quotient group of a subgroup of (the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":143937,"byte_end":144000,"line_start":428,"line_end":428,"column_start":1,"column_end":64}},{"value":"/ Edwards form of) Curve25519.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":144001,"byte_end":144033,"line_start":429,"line_end":429,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":144034,"byte_end":144037,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ Internally, a `RistrettoPoint` is implemented as a wrapper type","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":144038,"byte_end":144105,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/ around `EdwardsPoint`, with custom equality, compression, and","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":144106,"byte_end":144171,"line_start":432,"line_end":432,"column_start":1,"column_end":66}},{"value":"/ decompression routines to account for the quotient.  This means that","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":144172,"byte_end":144244,"line_start":433,"line_end":433,"column_start":1,"column_end":73}},{"value":"/ operations on `RistrettoPoint`s are exactly as fast as operations on","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":144245,"byte_end":144317,"line_start":434,"line_end":434,"column_start":1,"column_end":73}},{"value":"/ `EdwardsPoint`s.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":144318,"byte_end":144338,"line_start":435,"line_end":435,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":144339,"byte_end":144342,"line_start":436,"line_end":436,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":144510,"byte_end":144518,"line_start":442,"line_end":442,"column_start":12,"column_end":20},"name":"compress","qualname":"<RistrettoPoint>::compress","value":"pub fn compress(&Self) -> CompressedRistretto","parent":null,"children":[],"decl_id":null,"docs":" Compress this point using the Ristretto encoding.\n","sig":null,"attributes":[{"value":"/ Compress this point using the Ristretto encoding.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":144445,"byte_end":144498,"line_start":441,"line_end":441,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146822,"byte_end":146847,"line_start":506,"line_end":506,"column_start":12,"column_end":37},"name":"double_and_compress_batch","qualname":"<RistrettoPoint>::double_and_compress_batch","value":"pub fn double_and_compress_batch<'a, I>(I) -> Vec<CompressedRistretto> where\nI: IntoIterator<Item = &'a RistrettoPoint>","parent":null,"children":[],"decl_id":null,"docs":" Double-and-compress a batch of points.  The Ristretto encoding\n is not batchable, since it requires an inverse square root.","sig":null,"attributes":[{"value":"/ Double-and-compress a batch of points.  The Ristretto encoding","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":145643,"byte_end":145709,"line_start":477,"line_end":477,"column_start":5,"column_end":71}},{"value":"/ is not batchable, since it requires an inverse square root.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":145714,"byte_end":145777,"line_start":478,"line_end":478,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":145782,"byte_end":145785,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ However, given input points \\\\( P\\_1, \\ldots, P\\_n, \\\\)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":145790,"byte_end":145849,"line_start":480,"line_end":480,"column_start":5,"column_end":64}},{"value":"/ it is possible to compute the encodings of their doubles \\\\(","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":145854,"byte_end":145918,"line_start":481,"line_end":481,"column_start":5,"column_end":69}},{"value":"/ \\mathrm{enc}( [2]P\\_1), \\ldots, \\mathrm{enc}( [2]P\\_n ) \\\\)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":145923,"byte_end":145986,"line_start":482,"line_end":482,"column_start":5,"column_end":68}},{"value":"/ in a batch.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":145991,"byte_end":146006,"line_start":483,"line_end":483,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146011,"byte_end":146014,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146019,"byte_end":146026,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146031,"byte_end":146067,"line_start":486,"line_end":486,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146072,"byte_end":146126,"line_start":487,"line_end":487,"column_start":5,"column_end":59}},{"value":"/ extern crate rand_core;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146131,"byte_end":146158,"line_start":488,"line_end":488,"column_start":5,"column_end":32}},{"value":"/ use rand_core::OsRng;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146163,"byte_end":146188,"line_start":489,"line_end":489,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146193,"byte_end":146196,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # // Need fn main() here in comment so the doctest compiles","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146201,"byte_end":146264,"line_start":491,"line_end":491,"column_start":5,"column_end":68}},{"value":"/ # // See https://doc.rust-lang.org/book/documentation.html#documentation-as-tests","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146269,"byte_end":146354,"line_start":492,"line_end":492,"column_start":5,"column_end":90}},{"value":"/ # fn main() {","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146359,"byte_end":146376,"line_start":493,"line_end":493,"column_start":5,"column_end":22}},{"value":"/ let mut rng = OsRng;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146381,"byte_end":146405,"line_start":494,"line_end":494,"column_start":5,"column_end":29}},{"value":"/ let points: Vec<RistrettoPoint> =","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146410,"byte_end":146447,"line_start":495,"line_end":495,"column_start":5,"column_end":42}},{"value":"/     (0..32).map(|_| RistrettoPoint::random(&mut rng)).collect();","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146452,"byte_end":146520,"line_start":496,"line_end":496,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146525,"byte_end":146528,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ let compressed = RistrettoPoint::double_and_compress_batch(&points);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146533,"byte_end":146605,"line_start":498,"line_end":498,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146610,"byte_end":146613,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ for (P, P2_compressed) in points.iter().zip(compressed.iter()) {","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146618,"byte_end":146686,"line_start":500,"line_end":500,"column_start":5,"column_end":73}},{"value":"/     assert_eq!(*P2_compressed, (P + P).compress());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146691,"byte_end":146746,"line_start":501,"line_end":501,"column_start":5,"column_end":60}},{"value":"/ }","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146751,"byte_end":146756,"line_start":502,"line_end":502,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146761,"byte_end":146768,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146773,"byte_end":146780,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":146785,"byte_end":146810,"line_start":505,"line_end":505,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151865,"byte_end":151871,"line_start":651,"line_end":651,"column_start":12,"column_end":18},"name":"random","qualname":"<RistrettoPoint>::random","value":"pub fn random<R: RngCore + CryptoRng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a `RistrettoPoint` chosen uniformly at random using a user-provided RNG.","sig":null,"attributes":[{"value":"/ Return a `RistrettoPoint` chosen uniformly at random using a user-provided RNG.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151273,"byte_end":151356,"line_start":635,"line_end":635,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151361,"byte_end":151364,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151369,"byte_end":151381,"line_start":637,"line_end":637,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151386,"byte_end":151389,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ * `rng`: any RNG which implements the `RngCore + CryptoRng` interface.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151394,"byte_end":151468,"line_start":639,"line_end":639,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151473,"byte_end":151476,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151481,"byte_end":151494,"line_start":641,"line_end":641,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151499,"byte_end":151502,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ A random element of the Ristretto group.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151507,"byte_end":151551,"line_start":643,"line_end":643,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151556,"byte_end":151559,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ # Implementation","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151564,"byte_end":151584,"line_start":645,"line_end":645,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151589,"byte_end":151592,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ Uses the Ristretto-flavoured Elligator 2 map, so that the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151597,"byte_end":151658,"line_start":647,"line_end":647,"column_start":5,"column_end":66}},{"value":"/ discrete log of the output point with respect to any other","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151663,"byte_end":151725,"line_start":648,"line_end":648,"column_start":5,"column_end":67}},{"value":"/ point should be unknown.  The map is applied twice and the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151730,"byte_end":151792,"line_start":649,"line_end":649,"column_start":5,"column_end":67}},{"value":"/ results are added, to ensure a uniform distribution.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":151797,"byte_end":151853,"line_start":650,"line_end":650,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":153188,"byte_end":153203,"line_start":688,"line_end":688,"column_start":12,"column_end":27},"name":"hash_from_bytes","qualname":"<RistrettoPoint>::hash_from_bytes","value":"pub fn hash_from_bytes<D>(&[u8]) -> RistrettoPoint where D: Digest<OutputSize\n= U64> + Default","parent":null,"children":[],"decl_id":null,"docs":" Hash a slice of bytes into a `RistrettoPoint`.","sig":null,"attributes":[{"value":"/ Hash a slice of bytes into a `RistrettoPoint`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152077,"byte_end":152127,"line_start":658,"line_end":658,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152132,"byte_end":152135,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ Takes a type parameter `D`, which is any `Digest` producing 64","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152140,"byte_end":152206,"line_start":660,"line_end":660,"column_start":5,"column_end":71}},{"value":"/ bytes of output.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152211,"byte_end":152231,"line_start":661,"line_end":661,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152236,"byte_end":152239,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ Convenience wrapper around `from_hash`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152244,"byte_end":152287,"line_start":663,"line_end":663,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152292,"byte_end":152295,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ # Implementation","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152300,"byte_end":152320,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152325,"byte_end":152328,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ Uses the Ristretto-flavoured Elligator 2 map, so that the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152333,"byte_end":152394,"line_start":667,"line_end":667,"column_start":5,"column_end":66}},{"value":"/ discrete log of the output point with respect to any other","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152399,"byte_end":152461,"line_start":668,"line_end":668,"column_start":5,"column_end":67}},{"value":"/ point should be unknown.  The map is applied twice and the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152466,"byte_end":152528,"line_start":669,"line_end":669,"column_start":5,"column_end":67}},{"value":"/ results are added, to ensure a uniform distribution.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152533,"byte_end":152589,"line_start":670,"line_end":670,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152594,"byte_end":152597,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152602,"byte_end":152615,"line_start":672,"line_end":672,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152620,"byte_end":152623,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152628,"byte_end":152635,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152640,"byte_end":152676,"line_start":675,"line_end":675,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152681,"byte_end":152735,"line_start":676,"line_end":676,"column_start":5,"column_end":59}},{"value":"/ extern crate sha2;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152740,"byte_end":152762,"line_start":677,"line_end":677,"column_start":5,"column_end":27}},{"value":"/ use sha2::Sha512;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152767,"byte_end":152788,"line_start":678,"line_end":678,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152793,"byte_end":152796,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # // Need fn main() here in comment so the doctest compiles","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152801,"byte_end":152864,"line_start":680,"line_end":680,"column_start":5,"column_end":68}},{"value":"/ # // See https://doc.rust-lang.org/book/documentation.html#documentation-as-tests","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152869,"byte_end":152954,"line_start":681,"line_end":681,"column_start":5,"column_end":90}},{"value":"/ # fn main() {","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152959,"byte_end":152976,"line_start":682,"line_end":682,"column_start":5,"column_end":22}},{"value":"/ let msg = \"To really appreciate architecture, you may even need to commit a murder\";","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":152981,"byte_end":153069,"line_start":683,"line_end":683,"column_start":5,"column_end":93}},{"value":"/ let P = RistrettoPoint::hash_from_bytes::<Sha512>(msg.as_bytes());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":153074,"byte_end":153144,"line_start":684,"line_end":684,"column_start":5,"column_end":75}},{"value":"/ # }","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":153149,"byte_end":153156,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":153161,"byte_end":153168,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":153173,"byte_end":153176,"line_start":687,"line_end":687,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":153654,"byte_end":153663,"line_start":701,"line_end":701,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RistrettoPoint>::from_hash","value":"pub fn from_hash<D>(D) -> RistrettoPoint where D: Digest<OutputSize = U64> +\nDefault","parent":null,"children":[],"decl_id":null,"docs":" Construct a `RistrettoPoint` from an existing `Digest` instance.","sig":null,"attributes":[{"value":"/ Construct a `RistrettoPoint` from an existing `Digest` instance.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":153412,"byte_end":153480,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":153485,"byte_end":153488,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Use this instead of `hash_from_bytes` if it is more convenient","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":153493,"byte_end":153559,"line_start":698,"line_end":698,"column_start":5,"column_end":71}},{"value":"/ to stream data into the `Digest` than to pass a single byte","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":153564,"byte_end":153627,"line_start":699,"line_end":699,"column_start":5,"column_end":68}},{"value":"/ slice.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":153632,"byte_end":153642,"line_start":700,"line_end":700,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":154560,"byte_end":154578,"line_start":723,"line_end":723,"column_start":12,"column_end":30},"name":"from_uniform_bytes","qualname":"<RistrettoPoint>::from_uniform_bytes","value":"pub fn from_uniform_bytes(&[u8; ]) -> RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" Construct a `RistrettoPoint` from 64 bytes of data.","sig":null,"attributes":[{"value":"/ Construct a `RistrettoPoint` from 64 bytes of data.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":154034,"byte_end":154089,"line_start":712,"line_end":712,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":154094,"byte_end":154097,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ If the input bytes are uniformly distributed, the resulting","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":154102,"byte_end":154165,"line_start":714,"line_end":714,"column_start":5,"column_end":68}},{"value":"/ point will be uniformly distributed over the group, and its","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":154170,"byte_end":154233,"line_start":715,"line_end":715,"column_start":5,"column_end":68}},{"value":"/ discrete log with respect to other points should be unknown.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":154238,"byte_end":154302,"line_start":716,"line_end":716,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":154307,"byte_end":154310,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ # Implementation","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":154315,"byte_end":154335,"line_start":718,"line_end":718,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":154340,"byte_end":154343,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This function splits the input array into two 32-byte halves,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":154348,"byte_end":154413,"line_start":720,"line_end":720,"column_start":5,"column_end":70}},{"value":"/ takes the low 255 bits of each half mod p, applies the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":154418,"byte_end":154476,"line_start":721,"line_end":721,"column_start":5,"column_end":63}},{"value":"/ Ristretto-flavored Elligator map to each, and adds the results.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":154481,"byte_end":154548,"line_start":722,"line_end":722,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":777},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":160584,"byte_end":160614,"line_start":924,"line_end":924,"column_start":12,"column_end":42},"name":"VartimeRistrettoPrecomputation","qualname":"::ristretto::VartimeRistrettoPrecomputation","value":"","parent":null,"children":[],"decl_id":null,"docs":" Precomputation for variable-time multiscalar multiplication with `RistrettoPoint`s.\n","sig":null,"attributes":[{"value":"/ Precomputation for variable-time multiscalar multiplication with `RistrettoPoint`s.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":160307,"byte_end":160394,"line_start":919,"line_end":919,"column_start":1,"column_end":88}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":160547,"byte_end":160572,"line_start":923,"line_end":923,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":161862,"byte_end":161897,"line_start":968,"line_end":968,"column_start":12,"column_end":47},"name":"vartime_double_scalar_mul_basepoint","qualname":"<RistrettoPoint>::vartime_double_scalar_mul_basepoint","value":"pub fn vartime_double_scalar_mul_basepoint(&Scalar, &RistrettoPoint, &Scalar)\n-> RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the\n Ristretto basepoint.\n","sig":null,"attributes":[{"value":"/ Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":161757,"byte_end":161821,"line_start":966,"line_end":966,"column_start":5,"column_end":69}},{"value":"/ Ristretto basepoint.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":161826,"byte_end":161850,"line_start":967,"line_end":967,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1776},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":162543,"byte_end":162566,"line_start":992,"line_end":992,"column_start":12,"column_end":35},"name":"RistrettoBasepointTable","qualname":"::ristretto::RistrettoBasepointTable","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, used to accelerate\n scalar multiplication.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, used to accelerate","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":162110,"byte_end":162181,"line_start":979,"line_end":979,"column_start":1,"column_end":72}},{"value":"/ scalar multiplication.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":162182,"byte_end":162208,"line_start":980,"line_end":980,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":162209,"byte_end":162212,"line_start":981,"line_end":981,"column_start":1,"column_end":4}},{"value":"/ A precomputed table of multiples of the Ristretto basepoint is","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":162213,"byte_end":162279,"line_start":982,"line_end":982,"column_start":1,"column_end":67}},{"value":"/ available in the `constants` module:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":162280,"byte_end":162320,"line_start":983,"line_end":983,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":162321,"byte_end":162328,"line_start":984,"line_end":984,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":162329,"byte_end":162365,"line_start":985,"line_end":985,"column_start":1,"column_end":37}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":162366,"byte_end":162407,"line_start":986,"line_end":986,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":162408,"byte_end":162411,"line_start":987,"line_end":987,"column_start":1,"column_end":4}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":162412,"byte_end":162450,"line_start":988,"line_end":988,"column_start":1,"column_end":39}},{"value":"/ let P = &a * &constants::RISTRETTO_BASEPOINT_TABLE;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":162451,"byte_end":162506,"line_start":989,"line_end":989,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":162507,"byte_end":162514,"line_start":990,"line_end":990,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":163164,"byte_end":163170,"line_start":1012,"line_end":1012,"column_start":12,"column_end":18},"name":"create","qualname":"<RistrettoBasepointTable>::create","value":"pub fn create(&RistrettoPoint) -> RistrettoBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Create a precomputed table of multiples of the given `basepoint`.\n","sig":null,"attributes":[{"value":"/ Create a precomputed table of multiples of the given `basepoint`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":163083,"byte_end":163152,"line_start":1011,"line_end":1011,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":163387,"byte_end":163396,"line_start":1017,"line_end":1017,"column_start":12,"column_end":21},"name":"basepoint","qualname":"<RistrettoBasepointTable>::basepoint","value":"pub fn basepoint(&Self) -> RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" Get the basepoint for this table as a `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ Get the basepoint for this table as a `RistrettoPoint`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":163316,"byte_end":163375,"line_start":1016,"line_end":1016,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":812},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::constants","value":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":837}],"decl_id":null,"docs":" Various constants, such as the Ristretto and Ed25519 basepoints.","sig":null,"attributes":[{"value":"/ Various constants, such as the Ristretto and Ed25519 basepoints.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":181731,"byte_end":181799,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":181800,"byte_end":181803,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Most of the constants are given with","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":181804,"byte_end":181844,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ `LONG_DESCRIPTIVE_UPPER_CASE_NAMES`, but they can be brought into","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":181845,"byte_end":181914,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/ scope using a `let` binding:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":181915,"byte_end":181947,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":181948,"byte_end":181951,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":181952,"byte_end":181959,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":181960,"byte_end":181996,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/ use curve25519_dalek::traits::IsIdentity;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":181997,"byte_end":182042,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":182043,"byte_end":182046,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let B = &constants::RISTRETTO_BASEPOINT_TABLE;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":182047,"byte_end":182097,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ let l = &constants::BASEPOINT_ORDER;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":182098,"byte_end":182138,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":182139,"byte_end":182142,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let A = l * B;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":182143,"byte_end":182161,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ assert!(A.is_identity());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":182162,"byte_end":182191,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":182192,"byte_end":182199,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":182201,"byte_end":182226,"line_start":28,"line_end":28,"column_start":1,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":829},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":182819,"byte_end":182847,"line_start":47,"line_end":47,"column_start":11,"column_end":39},"name":"ED25519_BASEPOINT_COMPRESSED","qualname":"::constants::ED25519_BASEPOINT_COMPRESSED","value":"CompressedEdwardsY","parent":null,"children":[],"decl_id":null,"docs":" The Ed25519 basepoint, in `CompressedEdwardsY` format.","sig":null,"attributes":[{"value":"/ The Ed25519 basepoint, in `CompressedEdwardsY` format.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":182535,"byte_end":182593,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":182594,"byte_end":182597,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This is the little-endian byte encoding of \\\\( 4/5 \\pmod p \\\\),","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":182598,"byte_end":182665,"line_start":43,"line_end":43,"column_start":1,"column_end":68}},{"value":"/ which is the \\\\(y\\\\)-coordinate of the Ed25519 basepoint.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":182666,"byte_end":182727,"line_start":44,"line_end":44,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":182728,"byte_end":182731,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ The sign bit is 0 since the basepoint has \\\\(x\\\\) chosen to be positive.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":182732,"byte_end":182808,"line_start":46,"line_end":46,"column_start":1,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":830},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":183226,"byte_end":183242,"line_start":54,"line_end":54,"column_start":11,"column_end":27},"name":"X25519_BASEPOINT","qualname":"::constants::X25519_BASEPOINT","value":"MontgomeryPoint","parent":null,"children":[],"decl_id":null,"docs":" The X25519 basepoint, in `MontgomeryPoint` format.\n","sig":null,"attributes":[{"value":"/ The X25519 basepoint, in `MontgomeryPoint` format.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":183161,"byte_end":183215,"line_start":53,"line_end":53,"column_start":1,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":831},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":183601,"byte_end":183631,"line_start":61,"line_end":61,"column_start":11,"column_end":41},"name":"RISTRETTO_BASEPOINT_COMPRESSED","qualname":"::constants::RISTRETTO_BASEPOINT_COMPRESSED","value":"CompressedRistretto","parent":null,"children":[],"decl_id":null,"docs":" The Ristretto basepoint, in `CompressedRistretto` format.\n","sig":null,"attributes":[{"value":"/ The Ristretto basepoint, in `CompressedRistretto` format.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":183529,"byte_end":183590,"line_start":60,"line_end":60,"column_start":1,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":832},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":184124,"byte_end":184149,"line_start":71,"line_end":71,"column_start":11,"column_end":36},"name":"RISTRETTO_BASEPOINT_POINT","qualname":"::constants::RISTRETTO_BASEPOINT_POINT","value":"RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" The Ristretto basepoint, as a `RistrettoPoint`.","sig":null,"attributes":[{"value":"/ The Ristretto basepoint, as a `RistrettoPoint`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":183950,"byte_end":184001,"line_start":67,"line_end":67,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":184002,"byte_end":184005,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ This is called `_POINT` to distinguish it from `_TABLE`, which","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":184006,"byte_end":184072,"line_start":69,"line_end":69,"column_start":1,"column_end":67}},{"value":"/ provides fast scalar multiplication.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":184073,"byte_end":184113,"line_start":70,"line_end":70,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":833},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":184391,"byte_end":184406,"line_start":77,"line_end":77,"column_start":11,"column_end":26},"name":"BASEPOINT_ORDER","qualname":"::constants::BASEPOINT_ORDER","value":"Scalar","parent":null,"children":[],"decl_id":null,"docs":" `BASEPOINT_ORDER` is the order of the Ristretto group and of the Ed25519 basepoint, i.e.,\n $$\n \\ell = 2^\\{252\\} + 27742317777372353535851937790883648493.\n $$\n","sig":null,"attributes":[{"value":"/ `BASEPOINT_ORDER` is the order of the Ristretto group and of the Ed25519 basepoint, i.e.,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":184210,"byte_end":184303,"line_start":73,"line_end":73,"column_start":1,"column_end":94}},{"value":"/ $$","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":184304,"byte_end":184310,"line_start":74,"line_end":74,"column_start":1,"column_end":7}},{"value":"/ \\ell = 2^\\{252\\} + 27742317777372353535851937790883648493.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":184311,"byte_end":184373,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/ $$","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":184374,"byte_end":184380,"line_start":76,"line_end":76,"column_start":1,"column_end":7}}]},{"kind":"Const","id":{"krate":0,"index":837},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":184810,"byte_end":184835,"line_start":88,"line_end":88,"column_start":11,"column_end":36},"name":"RISTRETTO_BASEPOINT_TABLE","qualname":"::constants::RISTRETTO_BASEPOINT_TABLE","value":"RistrettoBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" The Ristretto basepoint, as a `RistrettoBasepointTable` for scalar multiplication.\n","sig":null,"attributes":[{"value":"/ The Ristretto basepoint, as a `RistrettoBasepointTable` for scalar multiplication.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/constants.rs","byte_start":184713,"byte_end":184799,"line_start":87,"line_end":87,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":838},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":860},{"krate":0,"index":869},{"krate":0,"index":887}],"decl_id":null,"docs":" Module for common traits.\n","sig":null,"attributes":[{"value":"/ Module for common traits.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":187907,"byte_end":187936,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":187938,"byte_end":187963,"line_start":13,"line_end":13,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":848},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":188266,"byte_end":188274,"line_start":26,"line_end":26,"column_start":11,"column_end":19},"name":"Identity","qualname":"::traits::Identity","value":"Identity","parent":null,"children":[{"krate":0,"index":849}],"decl_id":null,"docs":" Trait for getting the identity element of a point type.\n","sig":null,"attributes":[{"value":"/ Trait for getting the identity element of a point type.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":188196,"byte_end":188255,"line_start":25,"line_end":25,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":188373,"byte_end":188381,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"identity","qualname":"::traits::Identity::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":" Returns the identity element of the curve.\n Can be used as a constructor.\n","sig":null,"attributes":[{"value":"/ Returns the identity element of the curve.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":188281,"byte_end":188327,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/ Can be used as a constructor.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":188332,"byte_end":188365,"line_start":28,"line_end":28,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":850},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":188482,"byte_end":188492,"line_start":33,"line_end":33,"column_start":11,"column_end":21},"name":"IsIdentity","qualname":"::traits::IsIdentity","value":"IsIdentity","parent":null,"children":[{"krate":0,"index":851}],"decl_id":null,"docs":" Trait for testing if a curve point is equivalent to the identity point.\n","sig":null,"attributes":[{"value":"/ Trait for testing if a curve point is equivalent to the identity point.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":188396,"byte_end":188471,"line_start":32,"line_end":32,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":188576,"byte_end":188587,"line_start":35,"line_end":35,"column_start":8,"column_end":19},"name":"is_identity","qualname":"::traits::IsIdentity::is_identity","value":"pub fn is_identity(&Self) -> bool","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" Return true if this element is the identity element of the curve.\n","sig":null,"attributes":[{"value":"/ Return true if this element is the identity element of the curve.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":188499,"byte_end":188568,"line_start":34,"line_end":34,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":855},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189034,"byte_end":189048,"line_start":51,"line_end":51,"column_start":11,"column_end":25},"name":"MultiscalarMul","qualname":"::traits::MultiscalarMul","value":"MultiscalarMul","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857}],"decl_id":null,"docs":" A trait for constant-time multiscalar multiplication without precomputation.\n","sig":null,"attributes":[{"value":"/ A trait for constant-time multiscalar multiplication without precomputation.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":188943,"byte_end":189023,"line_start":50,"line_end":50,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":856},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189128,"byte_end":189133,"line_start":53,"line_end":53,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::MultiscalarMul::Point","value":"type Point;","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" The type of point being multiplied, e.g., `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ The type of point being multiplied, e.g., `RistrettoPoint`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189055,"byte_end":189118,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190721,"byte_end":190736,"line_start":98,"line_end":98,"column_start":8,"column_end":23},"name":"multiscalar_mul","qualname":"::traits::MultiscalarMul::multiscalar_mul","value":"pub fn multiscalar_mul<I, J>(I, J) -> Self::Point where I: IntoIterator,\nI::Item: Borrow<Scalar>, J: IntoIterator, J::Item: Borrow<Self::Point>","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" Given an iterator of (possibly secret) scalars and an iterator of\n public points, compute\n $$\n Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n.\n $$","sig":null,"attributes":[{"value":"/ Given an iterator of (possibly secret) scalars and an iterator of","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189140,"byte_end":189209,"line_start":55,"line_end":55,"column_start":5,"column_end":74}},{"value":"/ public points, compute","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189214,"byte_end":189240,"line_start":56,"line_end":56,"column_start":5,"column_end":31}},{"value":"/ $$","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189245,"byte_end":189251,"line_start":57,"line_end":57,"column_start":5,"column_end":11}},{"value":"/ Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189256,"byte_end":189295,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189300,"byte_end":189306,"line_start":59,"line_end":59,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189311,"byte_end":189314,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with two iterators of different lengths.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189319,"byte_end":189400,"line_start":61,"line_end":61,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189405,"byte_end":189408,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189413,"byte_end":189427,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189432,"byte_end":189435,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the inputs must be","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189440,"byte_end":189508,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/ convertable to iterators (`I: IntoIter`), and the iterator's items","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189513,"byte_end":189583,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ must be `Borrow<Scalar>` (or `Borrow<Point>`), to allow","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189588,"byte_end":189647,"line_start":67,"line_end":67,"column_start":5,"column_end":64}},{"value":"/ iterators returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189652,"byte_end":189707,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189712,"byte_end":189715,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189720,"byte_end":189727,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189732,"byte_end":189768,"line_start":71,"line_end":71,"column_start":5,"column_end":41}},{"value":"/ use curve25519_dalek::traits::MultiscalarMul;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189773,"byte_end":189822,"line_start":72,"line_end":72,"column_start":5,"column_end":54}},{"value":"/ use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189827,"byte_end":189879,"line_start":73,"line_end":73,"column_start":5,"column_end":57}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189884,"byte_end":189925,"line_start":74,"line_end":74,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189930,"byte_end":189933,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Some scalars","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189938,"byte_end":189957,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":189962,"byte_end":190000,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/ let b = Scalar::from(37264829u64);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190005,"byte_end":190043,"line_start":78,"line_end":78,"column_start":5,"column_end":43}},{"value":"/ let c = Scalar::from(98098098u64);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190048,"byte_end":190086,"line_start":79,"line_end":79,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190091,"byte_end":190094,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ // Some points","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190099,"byte_end":190117,"line_start":81,"line_end":81,"column_start":5,"column_end":23}},{"value":"/ let P = constants::RISTRETTO_BASEPOINT_POINT;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190122,"byte_end":190171,"line_start":82,"line_end":82,"column_start":5,"column_end":54}},{"value":"/ let Q = P + P;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190176,"byte_end":190194,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let R = P + Q;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190199,"byte_end":190217,"line_start":84,"line_end":84,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190222,"byte_end":190225,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ // A1 = a*P + b*Q + c*R","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190230,"byte_end":190257,"line_start":86,"line_end":86,"column_start":5,"column_end":32}},{"value":"/ let abc = [a,b,c];","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190262,"byte_end":190284,"line_start":87,"line_end":87,"column_start":5,"column_end":27}},{"value":"/ let A1 = RistrettoPoint::multiscalar_mul(&abc, &[P,Q,R]);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190289,"byte_end":190350,"line_start":88,"line_end":88,"column_start":5,"column_end":66}},{"value":"/ // Note: (&abc).into_iter(): Iterator<Item=&Scalar>","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190355,"byte_end":190410,"line_start":89,"line_end":89,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190415,"byte_end":190418,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ // A2 = (-a)*P + (-b)*Q + (-c)*R","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190423,"byte_end":190459,"line_start":91,"line_end":91,"column_start":5,"column_end":41}},{"value":"/ let minus_abc = abc.iter().map(|x| -x);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190464,"byte_end":190507,"line_start":92,"line_end":92,"column_start":5,"column_end":48}},{"value":"/ let A2 = RistrettoPoint::multiscalar_mul(minus_abc, &[P,Q,R]);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190512,"byte_end":190578,"line_start":93,"line_end":93,"column_start":5,"column_end":71}},{"value":"/ // Note: minus_abc.into_iter(): Iterator<Item=Scalar>","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190583,"byte_end":190640,"line_start":94,"line_end":94,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190645,"byte_end":190648,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A1.compress(), (-A2).compress());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190653,"byte_end":190701,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190706,"byte_end":190713,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":860},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191006,"byte_end":191027,"line_start":107,"line_end":107,"column_start":11,"column_end":32},"name":"VartimeMultiscalarMul","qualname":"::traits::VartimeMultiscalarMul","value":"VartimeMultiscalarMul","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":865}],"decl_id":null,"docs":" A trait for variable-time multiscalar multiplication without precomputation.\n","sig":null,"attributes":[{"value":"/ A trait for variable-time multiscalar multiplication without precomputation.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":190915,"byte_end":190995,"line_start":106,"line_end":106,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":861},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191107,"byte_end":191112,"line_start":109,"line_end":109,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::VartimeMultiscalarMul::Point","value":"type Point;","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" The type of point being multiplied, e.g., `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ The type of point being multiplied, e.g., `RistrettoPoint`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191034,"byte_end":191097,"line_start":108,"line_end":108,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193041,"byte_end":193065,"line_start":163,"line_end":163,"column_start":8,"column_end":32},"name":"optional_multiscalar_mul","qualname":"::traits::VartimeMultiscalarMul::optional_multiscalar_mul","value":"pub fn optional_multiscalar_mul<I, J>(I, J) -> Option<Self::Point> where\nI: IntoIterator, I::Item: Borrow<Scalar>, J: IntoIterator<Item =\nOption<Self::Point>>","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" Given an iterator of public scalars and an iterator of\n `Option`s of points, compute either `Some(Q)`, where\n $$\n Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,\n $$\n if all points were `Some(P_i)`, or else return `None`.","sig":null,"attributes":[{"value":"/ Given an iterator of public scalars and an iterator of","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191119,"byte_end":191177,"line_start":111,"line_end":111,"column_start":5,"column_end":63}},{"value":"/ `Option`s of points, compute either `Some(Q)`, where","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191182,"byte_end":191238,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/ $$","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191243,"byte_end":191249,"line_start":113,"line_end":113,"column_start":5,"column_end":11}},{"value":"/ Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191254,"byte_end":191293,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191298,"byte_end":191304,"line_start":115,"line_end":115,"column_start":5,"column_end":11}},{"value":"/ if all points were `Some(P_i)`, or else return `None`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191309,"byte_end":191367,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191372,"byte_end":191375,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This function is particularly useful when verifying statements","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191380,"byte_end":191446,"line_start":118,"line_end":118,"column_start":5,"column_end":71}},{"value":"/ involving compressed points.  Accepting `Option<Point>` allows","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191451,"byte_end":191517,"line_start":119,"line_end":119,"column_start":5,"column_end":71}},{"value":"/ inlining point decompression into the multiscalar call,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191522,"byte_end":191581,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ avoiding the need for temporary buffers.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191586,"byte_end":191630,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191635,"byte_end":191642,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191647,"byte_end":191683,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/ use curve25519_dalek::traits::VartimeMultiscalarMul;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191688,"byte_end":191744,"line_start":124,"line_end":124,"column_start":5,"column_end":61}},{"value":"/ use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191749,"byte_end":191801,"line_start":125,"line_end":125,"column_start":5,"column_end":57}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191806,"byte_end":191847,"line_start":126,"line_end":126,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191852,"byte_end":191855,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ // Some scalars","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191860,"byte_end":191879,"line_start":128,"line_end":128,"column_start":5,"column_end":24}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191884,"byte_end":191922,"line_start":129,"line_end":129,"column_start":5,"column_end":43}},{"value":"/ let b = Scalar::from(37264829u64);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191927,"byte_end":191965,"line_start":130,"line_end":130,"column_start":5,"column_end":43}},{"value":"/ let c = Scalar::from(98098098u64);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":191970,"byte_end":192008,"line_start":131,"line_end":131,"column_start":5,"column_end":43}},{"value":"/ let abc = [a,b,c];","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192013,"byte_end":192035,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192040,"byte_end":192043,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ // Some points","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192048,"byte_end":192066,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/ let P = constants::RISTRETTO_BASEPOINT_POINT;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192071,"byte_end":192120,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ let Q = P + P;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192125,"byte_end":192143,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ let R = P + Q;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192148,"byte_end":192166,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/ let PQR = [P, Q, R];","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192171,"byte_end":192195,"line_start":138,"line_end":138,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192200,"byte_end":192203,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ let compressed = [P.compress(), Q.compress(), R.compress()];","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192208,"byte_end":192272,"line_start":140,"line_end":140,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192277,"byte_end":192280,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ // Now we can compute A1 = a*P + b*Q + c*R using P, Q, R:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192285,"byte_end":192346,"line_start":142,"line_end":142,"column_start":5,"column_end":66}},{"value":"/ let A1 = RistrettoPoint::vartime_multiscalar_mul(&abc, &PQR);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192351,"byte_end":192416,"line_start":143,"line_end":143,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192421,"byte_end":192424,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ // Or using the compressed points:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192429,"byte_end":192467,"line_start":145,"line_end":145,"column_start":5,"column_end":43}},{"value":"/ let A2 = RistrettoPoint::optional_multiscalar_mul(","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192472,"byte_end":192526,"line_start":146,"line_end":146,"column_start":5,"column_end":59}},{"value":"/     &abc,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192531,"byte_end":192544,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/     compressed.iter().map(|pt| pt.decompress()),","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192549,"byte_end":192601,"line_start":148,"line_end":148,"column_start":5,"column_end":57}},{"value":"/ );","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192606,"byte_end":192612,"line_start":149,"line_end":149,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192617,"byte_end":192620,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A2, Some(A1));","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192625,"byte_end":192654,"line_start":151,"line_end":151,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192659,"byte_end":192662,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ // It's also possible to mix compressed and uncompressed points:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192667,"byte_end":192735,"line_start":153,"line_end":153,"column_start":5,"column_end":73}},{"value":"/ let A3 = RistrettoPoint::optional_multiscalar_mul(","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192740,"byte_end":192794,"line_start":154,"line_end":154,"column_start":5,"column_end":59}},{"value":"/     abc.iter()","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192799,"byte_end":192817,"line_start":155,"line_end":155,"column_start":5,"column_end":23}},{"value":"/         .chain(abc.iter()),","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192822,"byte_end":192853,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/     compressed.iter().map(|pt| pt.decompress())","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192858,"byte_end":192909,"line_start":157,"line_end":157,"column_start":5,"column_end":56}},{"value":"/         .chain(PQR.iter().map(|&pt| Some(pt))),","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192914,"byte_end":192965,"line_start":158,"line_end":158,"column_start":5,"column_end":56}},{"value":"/ );","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192970,"byte_end":192976,"line_start":159,"line_end":159,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192981,"byte_end":192984,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A3, Some(A1+A1));","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":192989,"byte_end":193021,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193026,"byte_end":193033,"line_start":162,"line_end":162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194877,"byte_end":194900,"line_start":213,"line_end":213,"column_start":8,"column_end":31},"name":"vartime_multiscalar_mul","qualname":"::traits::VartimeMultiscalarMul::vartime_multiscalar_mul","value":"pub fn vartime_multiscalar_mul<I, J>(I, J) -> Self::Point where\nI: IntoIterator, I::Item: Borrow<Scalar>, J: IntoIterator,\nJ::Item: Borrow<Self::Point>, Self::Point: Clone","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" Given an iterator of public scalars and an iterator of\n public points, compute\n $$\n Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,\n $$\n using variable-time operations.","sig":null,"attributes":[{"value":"/ Given an iterator of public scalars and an iterator of","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193244,"byte_end":193302,"line_start":169,"line_end":169,"column_start":5,"column_end":63}},{"value":"/ public points, compute","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193307,"byte_end":193333,"line_start":170,"line_end":170,"column_start":5,"column_end":31}},{"value":"/ $$","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193338,"byte_end":193344,"line_start":171,"line_end":171,"column_start":5,"column_end":11}},{"value":"/ Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193349,"byte_end":193388,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193393,"byte_end":193399,"line_start":173,"line_end":173,"column_start":5,"column_end":11}},{"value":"/ using variable-time operations.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193404,"byte_end":193439,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193444,"byte_end":193447,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with two iterators of different lengths.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193452,"byte_end":193533,"line_start":176,"line_end":176,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193538,"byte_end":193541,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193546,"byte_end":193560,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193565,"byte_end":193568,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the inputs must be","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193573,"byte_end":193641,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/ convertable to iterators (`I: IntoIter`), and the iterator's items","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193646,"byte_end":193716,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ must be `Borrow<Scalar>` (or `Borrow<Point>`), to allow","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193721,"byte_end":193780,"line_start":182,"line_end":182,"column_start":5,"column_end":64}},{"value":"/ iterators returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193785,"byte_end":193840,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193845,"byte_end":193848,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193853,"byte_end":193860,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193865,"byte_end":193901,"line_start":186,"line_end":186,"column_start":5,"column_end":41}},{"value":"/ use curve25519_dalek::traits::VartimeMultiscalarMul;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193906,"byte_end":193962,"line_start":187,"line_end":187,"column_start":5,"column_end":61}},{"value":"/ use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":193967,"byte_end":194019,"line_start":188,"line_end":188,"column_start":5,"column_end":57}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194024,"byte_end":194065,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194070,"byte_end":194073,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ // Some scalars","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194078,"byte_end":194097,"line_start":191,"line_end":191,"column_start":5,"column_end":24}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194102,"byte_end":194140,"line_start":192,"line_end":192,"column_start":5,"column_end":43}},{"value":"/ let b = Scalar::from(37264829u64);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194145,"byte_end":194183,"line_start":193,"line_end":193,"column_start":5,"column_end":43}},{"value":"/ let c = Scalar::from(98098098u64);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194188,"byte_end":194226,"line_start":194,"line_end":194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194231,"byte_end":194234,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ // Some points","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194239,"byte_end":194257,"line_start":196,"line_end":196,"column_start":5,"column_end":23}},{"value":"/ let P = constants::RISTRETTO_BASEPOINT_POINT;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194262,"byte_end":194311,"line_start":197,"line_end":197,"column_start":5,"column_end":54}},{"value":"/ let Q = P + P;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194316,"byte_end":194334,"line_start":198,"line_end":198,"column_start":5,"column_end":23}},{"value":"/ let R = P + Q;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194339,"byte_end":194357,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194362,"byte_end":194365,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ // A1 = a*P + b*Q + c*R","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194370,"byte_end":194397,"line_start":201,"line_end":201,"column_start":5,"column_end":32}},{"value":"/ let abc = [a,b,c];","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194402,"byte_end":194424,"line_start":202,"line_end":202,"column_start":5,"column_end":27}},{"value":"/ let A1 = RistrettoPoint::vartime_multiscalar_mul(&abc, &[P,Q,R]);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194429,"byte_end":194498,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ // Note: (&abc).into_iter(): Iterator<Item=&Scalar>","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194503,"byte_end":194558,"line_start":204,"line_end":204,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194563,"byte_end":194566,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ // A2 = (-a)*P + (-b)*Q + (-c)*R","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194571,"byte_end":194607,"line_start":206,"line_end":206,"column_start":5,"column_end":41}},{"value":"/ let minus_abc = abc.iter().map(|x| -x);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194612,"byte_end":194655,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/ let A2 = RistrettoPoint::vartime_multiscalar_mul(minus_abc, &[P,Q,R]);","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194660,"byte_end":194734,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ // Note: minus_abc.into_iter(): Iterator<Item=Scalar>","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194739,"byte_end":194796,"line_start":209,"line_end":209,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194801,"byte_end":194804,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A1.compress(), (-A2).compress());","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194809,"byte_end":194857,"line_start":211,"line_end":211,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":194862,"byte_end":194869,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":869},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196441,"byte_end":196473,"line_start":255,"line_end":255,"column_start":11,"column_end":43},"name":"VartimePrecomputedMultiscalarMul","qualname":"::traits::VartimePrecomputedMultiscalarMul","value":"VartimePrecomputedMultiscalarMul: Sized","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":873},{"krate":0,"index":878},{"krate":0,"index":883}],"decl_id":null,"docs":" A trait for variable-time multiscalar multiplication with precomputation.","sig":null,"attributes":[{"value":"/ A trait for variable-time multiscalar multiplication with precomputation.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195274,"byte_end":195351,"line_start":229,"line_end":229,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195352,"byte_end":195355,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ A general multiscalar multiplication with precomputation can be written as","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195356,"byte_end":195434,"line_start":231,"line_end":231,"column_start":1,"column_end":79}},{"value":"/ $$","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195435,"byte_end":195441,"line_start":232,"line_end":232,"column_start":1,"column_end":7}},{"value":"/ Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195442,"byte_end":195506,"line_start":233,"line_end":233,"column_start":1,"column_end":65}},{"value":"/ $$","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195507,"byte_end":195513,"line_start":234,"line_end":234,"column_start":1,"column_end":7}},{"value":"/ where the \\\\(B_i\\\\) are *static* points, for which precomputation","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195514,"byte_end":195583,"line_start":235,"line_end":235,"column_start":1,"column_end":70}},{"value":"/ is possible, and the \\\\(A_j\\\\) are *dynamic* points, for which","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195584,"byte_end":195650,"line_start":236,"line_end":236,"column_start":1,"column_end":67}},{"value":"/ precomputation is not possible.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195651,"byte_end":195686,"line_start":237,"line_end":237,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195687,"byte_end":195690,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ This trait has three methods for performing this computation:","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195691,"byte_end":195756,"line_start":239,"line_end":239,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195757,"byte_end":195760,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ * [`vartime_multiscalar_mul`], which handles the special case","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195761,"byte_end":195826,"line_start":241,"line_end":241,"column_start":1,"column_end":66}},{"value":"/ where \\\\(n = 0\\\\) and there are no dynamic points;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195827,"byte_end":195881,"line_start":242,"line_end":242,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195882,"byte_end":195885,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ * [`vartime_mixed_multiscalar_mul`], which takes the dynamic","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195886,"byte_end":195950,"line_start":244,"line_end":244,"column_start":1,"column_end":65}},{"value":"/ points as already-validated `Point`s and is infallible;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":195951,"byte_end":196010,"line_start":245,"line_end":245,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196011,"byte_end":196014,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ * [`optional_mixed_multiscalar_mul`], which takes the dynamic","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196015,"byte_end":196080,"line_start":247,"line_end":247,"column_start":1,"column_end":66}},{"value":"/ points as `Option<Point>`s and returns an `Option<Point>`,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196081,"byte_end":196143,"line_start":248,"line_end":248,"column_start":1,"column_end":63}},{"value":"/ allowing decompression to be composed into the input iterators.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196144,"byte_end":196211,"line_start":249,"line_end":249,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196212,"byte_end":196215,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ All methods require that the lengths of the input iterators be","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196216,"byte_end":196282,"line_start":251,"line_end":251,"column_start":1,"column_end":67}},{"value":"/ known and matching, as if they were `ExactSizeIterator`s.  (It","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196283,"byte_end":196349,"line_start":252,"line_end":252,"column_start":1,"column_end":67}},{"value":"/ does not require `ExactSizeIterator` only because that trait is","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196350,"byte_end":196417,"line_start":253,"line_end":253,"column_start":1,"column_end":68}},{"value":"/ broken).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196418,"byte_end":196430,"line_start":254,"line_end":254,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":870},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196560,"byte_end":196565,"line_start":257,"line_end":257,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::VartimePrecomputedMultiscalarMul::Point","value":"type Point: Clone;","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The type of point to be multiplied, e.g., `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ The type of point to be multiplied, e.g., `RistrettoPoint`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196487,"byte_end":196550,"line_start":256,"line_end":256,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196694,"byte_end":196697,"line_start":261,"line_end":261,"column_start":8,"column_end":11},"name":"new","qualname":"::traits::VartimePrecomputedMultiscalarMul::new","value":"pub fn new<I>(I) -> Self where I: IntoIterator, I::Item: Borrow<Self::Point>","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Given the static points \\\\( B_i \\\\), perform precomputation\n and return the precomputation data.\n","sig":null,"attributes":[{"value":"/ Given the static points \\\\( B_i \\\\), perform precomputation","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196579,"byte_end":196642,"line_start":259,"line_end":259,"column_start":5,"column_end":68}},{"value":"/ and return the precomputation data.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196647,"byte_end":196686,"line_start":260,"line_end":260,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":197390,"byte_end":197413,"line_start":280,"line_end":280,"column_start":8,"column_end":31},"name":"vartime_multiscalar_mul","qualname":"::traits::VartimePrecomputedMultiscalarMul::vartime_multiscalar_mul","value":"pub fn vartime_multiscalar_mul<I>(&Self, I) -> Self::Point where\nI: IntoIterator, I::Item: Borrow<Scalar>","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Given `static_scalars`, an iterator of public scalars\n \\\\(b_i\\\\), compute\n $$\n Q = b_1 B_1 + \\cdots + b_m B_m,\n $$\n where the \\\\(B_j\\\\) are the points that were supplied to `new`.","sig":null,"attributes":[{"value":"/ Given `static_scalars`, an iterator of public scalars","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196805,"byte_end":196862,"line_start":266,"line_end":266,"column_start":5,"column_end":62}},{"value":"/ \\\\(b_i\\\\), compute","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196867,"byte_end":196889,"line_start":267,"line_end":267,"column_start":5,"column_end":27}},{"value":"/ $$","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196894,"byte_end":196900,"line_start":268,"line_end":268,"column_start":5,"column_end":11}},{"value":"/ Q = b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196905,"byte_end":196940,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ $$","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196945,"byte_end":196951,"line_start":270,"line_end":270,"column_start":5,"column_end":11}},{"value":"/ where the \\\\(B_j\\\\) are the points that were supplied to `new`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196956,"byte_end":197023,"line_start":271,"line_end":271,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":197028,"byte_end":197031,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with iterators of","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":197036,"byte_end":197094,"line_start":273,"line_end":273,"column_start":5,"column_end":63}},{"value":"/ inconsistent lengths.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":197099,"byte_end":197124,"line_start":274,"line_end":274,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":197129,"byte_end":197132,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the input must","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":197137,"byte_end":197201,"line_start":276,"line_end":276,"column_start":5,"column_end":69}},{"value":"/ be convertable to iterators (`I: IntoIter`), and the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":197206,"byte_end":197262,"line_start":277,"line_end":277,"column_start":5,"column_end":61}},{"value":"/ iterator's items must be `Borrow<Scalar>`, to allow iterators","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":197267,"byte_end":197332,"line_start":278,"line_end":278,"column_start":5,"column_end":70}},{"value":"/ returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":197337,"byte_end":197382,"line_start":279,"line_end":279,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":198515,"byte_end":198544,"line_start":311,"line_end":311,"column_start":8,"column_end":37},"name":"vartime_mixed_multiscalar_mul","qualname":"::traits::VartimePrecomputedMultiscalarMul::vartime_mixed_multiscalar_mul","value":"pub fn vartime_mixed_multiscalar_mul<I, J, K>(&Self, I, J, K) -> Self::Point\nwhere I: IntoIterator, I::Item: Borrow<Scalar>, J: IntoIterator,\nJ::Item: Borrow<Scalar>, K: IntoIterator, K::Item: Borrow<Self::Point>","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Given `static_scalars`, an iterator of public scalars\n \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars\n \\\\(a_i\\\\), and `dynamic_points`, an iterator of points\n \\\\(A_i\\\\), compute\n $$\n Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,\n $$\n where the \\\\(B_j\\\\) are the points that were supplied to `new`.","sig":null,"attributes":[{"value":"/ Given `static_scalars`, an iterator of public scalars","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":197748,"byte_end":197805,"line_start":295,"line_end":295,"column_start":5,"column_end":62}},{"value":"/ \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":197810,"byte_end":197873,"line_start":296,"line_end":296,"column_start":5,"column_end":68}},{"value":"/ \\\\(a_i\\\\), and `dynamic_points`, an iterator of points","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":197878,"byte_end":197936,"line_start":297,"line_end":297,"column_start":5,"column_end":63}},{"value":"/ \\\\(A_i\\\\), compute","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":197941,"byte_end":197963,"line_start":298,"line_end":298,"column_start":5,"column_end":27}},{"value":"/ $$","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":197968,"byte_end":197974,"line_start":299,"line_end":299,"column_start":5,"column_end":11}},{"value":"/ Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":197979,"byte_end":198043,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/ $$","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":198048,"byte_end":198054,"line_start":301,"line_end":301,"column_start":5,"column_end":11}},{"value":"/ where the \\\\(B_j\\\\) are the points that were supplied to `new`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":198059,"byte_end":198126,"line_start":302,"line_end":302,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":198131,"byte_end":198134,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with iterators of","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":198139,"byte_end":198197,"line_start":304,"line_end":304,"column_start":5,"column_end":63}},{"value":"/ inconsistent lengths.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":198202,"byte_end":198227,"line_start":305,"line_end":305,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":198232,"byte_end":198235,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the inputs must be","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":198240,"byte_end":198308,"line_start":307,"line_end":307,"column_start":5,"column_end":73}},{"value":"/ convertable to iterators (`I: IntoIter`), and the iterator's items","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":198313,"byte_end":198383,"line_start":308,"line_end":308,"column_start":5,"column_end":75}},{"value":"/ must be `Borrow<Scalar>` (or `Borrow<Point>`), to allow","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":198388,"byte_end":198447,"line_start":309,"line_end":309,"column_start":5,"column_end":64}},{"value":"/ iterators returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":198452,"byte_end":198507,"line_start":310,"line_end":310,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199925,"byte_end":199955,"line_start":352,"line_end":352,"column_start":8,"column_end":38},"name":"optional_mixed_multiscalar_mul","qualname":"::traits::VartimePrecomputedMultiscalarMul::optional_mixed_multiscalar_mul","value":"pub fn optional_mixed_multiscalar_mul<I, J, K>(&Self, I, J, K)\n-> Option<Self::Point> where I: IntoIterator, I::Item: Borrow<Scalar>,\nJ: IntoIterator, J::Item: Borrow<Scalar>, K: IntoIterator<Item =\nOption<Self::Point>>","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Given `static_scalars`, an iterator of public scalars\n \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars\n \\\\(a_i\\\\), and `dynamic_points`, an iterator of points\n \\\\(A_i\\\\), compute\n $$\n Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,\n $$\n where the \\\\(B_j\\\\) are the points that were supplied to `new`.","sig":null,"attributes":[{"value":"/ Given `static_scalars`, an iterator of public scalars","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199102,"byte_end":199159,"line_start":334,"line_end":334,"column_start":5,"column_end":62}},{"value":"/ \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199164,"byte_end":199227,"line_start":335,"line_end":335,"column_start":5,"column_end":68}},{"value":"/ \\\\(a_i\\\\), and `dynamic_points`, an iterator of points","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199232,"byte_end":199290,"line_start":336,"line_end":336,"column_start":5,"column_end":63}},{"value":"/ \\\\(A_i\\\\), compute","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199295,"byte_end":199317,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/ $$","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199322,"byte_end":199328,"line_start":338,"line_end":338,"column_start":5,"column_end":11}},{"value":"/ Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199333,"byte_end":199397,"line_start":339,"line_end":339,"column_start":5,"column_end":69}},{"value":"/ $$","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199402,"byte_end":199408,"line_start":340,"line_end":340,"column_start":5,"column_end":11}},{"value":"/ where the \\\\(B_j\\\\) are the points that were supplied to `new`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199413,"byte_end":199480,"line_start":341,"line_end":341,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199485,"byte_end":199488,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ If any of the dynamic points were `None`, return `None`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199493,"byte_end":199553,"line_start":343,"line_end":343,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199558,"byte_end":199561,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with iterators of","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199566,"byte_end":199624,"line_start":345,"line_end":345,"column_start":5,"column_end":63}},{"value":"/ inconsistent lengths.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199629,"byte_end":199654,"line_start":346,"line_end":346,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199659,"byte_end":199662,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This function is particularly useful when verifying statements","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199667,"byte_end":199733,"line_start":348,"line_end":348,"column_start":5,"column_end":71}},{"value":"/ involving compressed points.  Accepting `Option<Point>` allows","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199738,"byte_end":199804,"line_start":349,"line_end":349,"column_start":5,"column_end":71}},{"value":"/ inlining point decompression into the multiscalar call,","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199809,"byte_end":199868,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/ avoiding the need for temporary buffers.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":199873,"byte_end":199917,"line_start":351,"line_end":351,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":203346,"byte_end":203357,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<FieldElement>::is_negative","value":"pub fn is_negative(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement` is negative, in the sense\n used in the ed25519 paper: `x` is negative if the low bit is\n set.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement` is negative, in the sense","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":203084,"byte_end":203146,"line_start":73,"line_end":73,"column_start":5,"column_end":67}},{"value":"/ used in the ed25519 paper: `x` is negative if the low bit is","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":203151,"byte_end":203215,"line_start":74,"line_end":74,"column_start":5,"column_end":69}},{"value":"/ set.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":203220,"byte_end":203228,"line_start":75,"line_end":75,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":203233,"byte_end":203236,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":203241,"byte_end":203253,"line_start":77,"line_end":77,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":203258,"byte_end":203261,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ If negative, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":203266,"byte_end":203334,"line_start":79,"line_end":79,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":203614,"byte_end":203621,"line_start":90,"line_end":90,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<FieldElement>::is_zero","value":"pub fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement` is zero.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement` is zero.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":203455,"byte_end":203500,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":203505,"byte_end":203508,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":203513,"byte_end":203525,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":203530,"byte_end":203533,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If zero, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":203538,"byte_end":203602,"line_start":89,"line_end":89,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":205766,"byte_end":205778,"line_start":139,"line_end":139,"column_start":12,"column_end":24},"name":"batch_invert","qualname":"<FieldElement>::batch_invert","value":"pub fn batch_invert(&mut [FieldElement])","parent":null,"children":[],"decl_id":null,"docs":" Given a slice of public `FieldElements`, replace each with its inverse.","sig":null,"attributes":[{"value":"/ Given a slice of public `FieldElements`, replace each with its inverse.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":205586,"byte_end":205661,"line_start":135,"line_end":135,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":205666,"byte_end":205669,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ All input `FieldElements` **MUST** be nonzero.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":205674,"byte_end":205724,"line_start":137,"line_end":137,"column_start":5,"column_end":55}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":205729,"byte_end":205754,"line_start":138,"line_end":138,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":207084,"byte_end":207090,"line_start":178,"line_end":178,"column_start":12,"column_end":18},"name":"invert","qualname":"<FieldElement>::invert","value":"pub fn invert(&Self) -> FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Given a nonzero field element, compute its inverse.","sig":null,"attributes":[{"value":"/ Given a nonzero field element, compute its inverse.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":206858,"byte_end":206913,"line_start":172,"line_end":172,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":206918,"byte_end":206921,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The inverse is computed as self^(p-2), since","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":206926,"byte_end":206974,"line_start":174,"line_end":174,"column_start":5,"column_end":53}},{"value":"/ x^(p-2)x = x^(p-1) = 1 (mod p).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":206979,"byte_end":207014,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":207019,"byte_end":207022,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This function returns zero on input zero.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":207027,"byte_end":207072,"line_start":177,"line_end":177,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":208404,"byte_end":208416,"line_start":213,"line_end":213,"column_start":12,"column_end":24},"name":"sqrt_ratio_i","qualname":"<FieldElement>::sqrt_ratio_i","value":"pub fn sqrt_ratio_i(&FieldElement, &FieldElement) -> (Choice, FieldElement)","parent":null,"children":[],"decl_id":null,"docs":" Given `FieldElements` `u` and `v`, compute either `sqrt(u/v)`\n or `sqrt(i*u/v)` in constant time.","sig":null,"attributes":[{"value":"/ Given `FieldElements` `u` and `v`, compute either `sqrt(u/v)`","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":207881,"byte_end":207946,"line_start":201,"line_end":201,"column_start":5,"column_end":70}},{"value":"/ or `sqrt(i*u/v)` in constant time.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":207951,"byte_end":207989,"line_start":202,"line_end":202,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":207994,"byte_end":207997,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This function always returns the nonnegative square root.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":208002,"byte_end":208063,"line_start":204,"line_end":204,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":208068,"byte_end":208071,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":208076,"byte_end":208088,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":208093,"byte_end":208096,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ - `(Choice(1), +sqrt(u/v))  ` if `v` is nonzero and `u/v` is square;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":208101,"byte_end":208173,"line_start":208,"line_end":208,"column_start":5,"column_end":77}},{"value":"/ - `(Choice(1), zero)        ` if `u` is zero;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":208178,"byte_end":208227,"line_start":209,"line_end":209,"column_start":5,"column_end":54}},{"value":"/ - `(Choice(0), zero)        ` if `v` is zero and `u` is nonzero;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":208232,"byte_end":208300,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ - `(Choice(0), +sqrt(i*u/v))` if `u/v` is nonsquare (so `i*u/v` is square).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":208305,"byte_end":208384,"line_start":211,"line_end":211,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":208389,"byte_end":208392,"line_start":212,"line_end":212,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":210725,"byte_end":210732,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"name":"invsqrt","qualname":"<FieldElement>::invsqrt","value":"pub fn invsqrt(&Self) -> (Choice, FieldElement)","parent":null,"children":[],"decl_id":null,"docs":" Attempt to compute `sqrt(1/self)` in constant time.","sig":null,"attributes":[{"value":"/ Attempt to compute `sqrt(1/self)` in constant time.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":210277,"byte_end":210332,"line_start":261,"line_end":261,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":210337,"byte_end":210340,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Convenience wrapper around `sqrt_ratio_i`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":210345,"byte_end":210391,"line_start":263,"line_end":263,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":210396,"byte_end":210399,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function always returns the nonnegative square root.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":210404,"byte_end":210465,"line_start":265,"line_end":265,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":210470,"byte_end":210473,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":210478,"byte_end":210490,"line_start":267,"line_end":267,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":210495,"byte_end":210498,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ - `(Choice(1), +sqrt(1/self))  ` if `self` is a nonzero square;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":210503,"byte_end":210570,"line_start":269,"line_end":269,"column_start":5,"column_end":72}},{"value":"/ - `(Choice(0), zero)           ` if `self` is zero;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":210575,"byte_end":210630,"line_start":270,"line_end":270,"column_start":5,"column_end":60}},{"value":"/ - `(Choice(0), +sqrt(i/self))  ` if `self` is a nonzero nonsquare;","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":210635,"byte_end":210705,"line_start":271,"line_end":271,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":210710,"byte_end":210713,"line_start":272,"line_end":272,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1781},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":223162,"byte_end":223176,"line_start":41,"line_end":41,"column_start":12,"column_end":26},"name":"FieldElement51","qualname":"::backend::serial::u64::field::FieldElement51","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `FieldElement51` represents an element of the field\n \\\\( \\mathbb Z / (2\\^{255} - 19)\\\\).","sig":null,"attributes":[{"value":"/ A `FieldElement51` represents an element of the field","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":222518,"byte_end":222575,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/ \\\\( \\mathbb Z / (2\\^{255} - 19)\\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":222576,"byte_end":222615,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":222616,"byte_end":222619,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the 64-bit implementation, a `FieldElement` is represented in","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":222620,"byte_end":222688,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ radix \\\\(2\\^{51}\\\\) as five `u64`s; the coefficients are allowed to","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":222689,"byte_end":222760,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ grow up to \\\\(2\\^{54}\\\\) between reductions modulo \\\\(p\\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":222761,"byte_end":222824,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":222825,"byte_end":222828,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":222829,"byte_end":222839,"line_start":32,"line_end":32,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":222840,"byte_end":222843,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The `curve25519_dalek::field` module provides a type alias","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":222844,"byte_end":222906,"line_start":34,"line_end":34,"column_start":1,"column_end":63}},{"value":"/ `curve25519_dalek::field::FieldElement` to either `FieldElement51`","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":222907,"byte_end":222977,"line_start":35,"line_end":35,"column_start":1,"column_end":71}},{"value":"/ or `FieldElement2625`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":222978,"byte_end":223004,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":223005,"byte_end":223008,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The backend-specific type `FieldElement51` should not be used","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":223009,"byte_end":223074,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/ outside of the `curve25519_dalek::field` module.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":223075,"byte_end":223127,"line_start":39,"line_end":39,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":230901,"byte_end":230907,"line_start":254,"line_end":254,"column_start":12,"column_end":18},"name":"negate","qualname":"<FieldElement51>::negate","value":"pub fn negate(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invert the sign of this field element\n","sig":null,"attributes":[{"value":"/ Invert the sign of this field element","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":230848,"byte_end":230889,"line_start":253,"line_end":253,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":231314,"byte_end":231318,"line_start":267,"line_end":267,"column_start":12,"column_end":16},"name":"zero","qualname":"<FieldElement51>::zero","value":"pub fn zero() -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Construct zero.\n","sig":null,"attributes":[{"value":"/ Construct zero.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":231283,"byte_end":231302,"line_start":266,"line_end":266,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":231424,"byte_end":231427,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"one","qualname":"<FieldElement51>::one","value":"pub fn one() -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Construct one.\n","sig":null,"attributes":[{"value":"/ Construct one.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":231394,"byte_end":231412,"line_start":271,"line_end":271,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":231532,"byte_end":231541,"line_start":277,"line_end":277,"column_start":12,"column_end":21},"name":"minus_one","qualname":"<FieldElement51>::minus_one","value":"pub fn minus_one() -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Construct -1.\n","sig":null,"attributes":[{"value":"/ Construct -1.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":231503,"byte_end":231520,"line_start":276,"line_end":276,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":233331,"byte_end":233341,"line_start":330,"line_end":330,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FieldElement51>::from_bytes","value":"pub fn from_bytes(&[u8; ]) -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Load a `FieldElement51` from the low 255 bits of a 256-bit\n input.","sig":null,"attributes":[{"value":"/ Load a `FieldElement51` from the low 255 bits of a 256-bit","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":232842,"byte_end":232904,"line_start":318,"line_end":318,"column_start":5,"column_end":67}},{"value":"/ input.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":232909,"byte_end":232919,"line_start":319,"line_end":319,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":232924,"byte_end":232927,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":232932,"byte_end":232945,"line_start":321,"line_end":321,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":232950,"byte_end":232953,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ This function does not check that the input used the canonical","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":232958,"byte_end":233024,"line_start":323,"line_end":323,"column_start":5,"column_end":71}},{"value":"/ representative.  It masks the high bit, but it will happily","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":233029,"byte_end":233092,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/ decode 2^255 - 18 to 1.  Applications that require a canonical","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":233097,"byte_end":233163,"line_start":325,"line_end":325,"column_start":5,"column_end":71}},{"value":"/ encoding of every field element should decode, re-encode to","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":233168,"byte_end":233231,"line_start":326,"line_end":326,"column_start":5,"column_end":68}},{"value":"/ the canonical encoding, and check that the input was","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":233236,"byte_end":233292,"line_start":327,"line_end":327,"column_start":5,"column_end":61}},{"value":"/ canonical.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":233297,"byte_end":233311,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":233316,"byte_end":233319,"line_start":329,"line_end":329,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":234470,"byte_end":234478,"line_start":359,"line_end":359,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<FieldElement51>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serialize this `FieldElement51` to a 32-byte array.  The\n encoding is canonical.\n","sig":null,"attributes":[{"value":"/ Serialize this `FieldElement51` to a 32-byte array.  The","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":234367,"byte_end":234427,"line_start":357,"line_end":357,"column_start":5,"column_end":65}},{"value":"/ encoding is canonical.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":234432,"byte_end":234458,"line_start":358,"line_end":358,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":237634,"byte_end":237639,"line_start":444,"line_end":444,"column_start":12,"column_end":17},"name":"pow2k","qualname":"<FieldElement51>::pow2k","value":"pub fn pow2k(&Self, u32) -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Given `k > 0`, return `self^(2^k)`.\n","sig":null,"attributes":[{"value":"/ Given `k > 0`, return `self^(2^k)`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":237583,"byte_end":237622,"line_start":443,"line_end":443,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":241560,"byte_end":241566,"line_start":550,"line_end":550,"column_start":12,"column_end":18},"name":"square","qualname":"<FieldElement51>::square","value":"pub fn square(&Self) -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Returns the square of this field element.\n","sig":null,"attributes":[{"value":"/ Returns the square of this field element.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":241503,"byte_end":241548,"line_start":549,"line_end":549,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":241692,"byte_end":241699,"line_start":555,"line_end":555,"column_start":12,"column_end":19},"name":"square2","qualname":"<FieldElement51>::square2","value":"pub fn square2(&Self) -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Returns 2 times the square of this field element.\n","sig":null,"attributes":[{"value":"/ Returns 2 times the square of this field element.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":241627,"byte_end":241680,"line_start":554,"line_end":554,"column_start":5,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":1126},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":262221,"byte_end":262244,"line_start":129,"line_end":129,"column_start":11,"column_end":34},"name":"ED25519_BASEPOINT_POINT","qualname":"::backend::serial::u64::constants::ED25519_BASEPOINT_POINT","value":"EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" The Ed25519 basepoint, as an `EdwardsPoint`.","sig":null,"attributes":[{"value":"/ The Ed25519 basepoint, as an `EdwardsPoint`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":262005,"byte_end":262053,"line_start":124,"line_end":124,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":262054,"byte_end":262057,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ This is called `_POINT` to distinguish it from","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":262058,"byte_end":262108,"line_start":126,"line_end":126,"column_start":1,"column_end":51}},{"value":"/ `ED25519_BASEPOINT_TABLE`, which should be used for scalar","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":262109,"byte_end":262171,"line_start":127,"line_end":127,"column_start":1,"column_end":63}},{"value":"/ multiplication (it's much faster).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":262172,"byte_end":262210,"line_start":128,"line_end":128,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":263168,"byte_end":263181,"line_start":162,"line_end":162,"column_start":11,"column_end":24},"name":"EIGHT_TORSION","qualname":"::backend::serial::u64::constants::EIGHT_TORSION","value":"[EdwardsPoint; ]","parent":null,"children":[],"decl_id":null,"docs":" The 8-torsion subgroup \\\\(\\mathcal E [8]\\\\).","sig":null,"attributes":[{"value":"/ The 8-torsion subgroup \\\\(\\mathcal E [8]\\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":262798,"byte_end":262846,"line_start":154,"line_end":154,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":262847,"byte_end":262850,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ In the case of Curve25519, it is cyclic; the \\\\(i\\\\)-th element of","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":262851,"byte_end":262921,"line_start":156,"line_end":156,"column_start":1,"column_end":71}},{"value":"/ the array is \\\\([i]P\\\\), where \\\\(P\\\\) is a point of order \\\\(8\\\\)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":262922,"byte_end":262992,"line_start":157,"line_end":157,"column_start":1,"column_end":71}},{"value":"/ generating \\\\(\\mathcal E[8]\\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":262993,"byte_end":263028,"line_start":158,"line_end":158,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":263029,"byte_end":263032,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ Thus \\\\(\\mathcal E[4]\\\\) is the points indexed by `0,2,4,6`, and","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":263033,"byte_end":263101,"line_start":160,"line_end":160,"column_start":1,"column_end":69}},{"value":"/ \\\\(\\mathcal E[2]\\\\) is the points indexed by `0,4`.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":263102,"byte_end":263157,"line_start":161,"line_end":161,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":263327,"byte_end":263357,"line_start":166,"line_end":166,"column_start":11,"column_end":41},"name":"EIGHT_TORSION_INNER_DOC_HIDDEN","qualname":"::backend::serial::u64::constants::EIGHT_TORSION_INNER_DOC_HIDDEN","value":"[EdwardsPoint; ]","parent":null,"children":[],"decl_id":null,"docs":" Inner item used to hide limb constants from cargo doc output.\n","sig":null,"attributes":[{"value":"/ Inner item used to hide limb constants from cargo doc output.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":263236,"byte_end":263301,"line_start":164,"line_end":164,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":267255,"byte_end":267278,"line_start":308,"line_end":308,"column_start":11,"column_end":34},"name":"ED25519_BASEPOINT_TABLE","qualname":"::backend::serial::u64::constants::ED25519_BASEPOINT_TABLE","value":"EdwardsBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Table containing precomputed multiples of the Ed25519 basepoint \\\\(B = (x, 4/5)\\\\).\n","sig":null,"attributes":[{"value":"/ Table containing precomputed multiples of the Ed25519 basepoint \\\\(B = (x, 4/5)\\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":267157,"byte_end":267244,"line_start":307,"line_end":307,"column_start":1,"column_end":88}}]},{"kind":"Const","id":{"krate":0,"index":1132},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":267448,"byte_end":267488,"line_start":312,"line_end":312,"column_start":11,"column_end":51},"name":"ED25519_BASEPOINT_TABLE_INNER_DOC_HIDDEN","qualname":"::backend::serial::u64::constants::ED25519_BASEPOINT_TABLE_INNER_DOC_HIDDEN","value":"EdwardsBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Inner constant, used to avoid filling the docs with precomputed points.\n","sig":null,"attributes":[{"value":"/ Inner constant, used to avoid filling the docs with precomputed points.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/constants.rs","byte_start":267347,"byte_end":267422,"line_start":310,"line_end":310,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1797},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524220,"byte_end":524235,"line_start":151,"line_end":151,"column_start":12,"column_end":27},"name":"ProjectivePoint","qualname":"::backend::serial::curve_models::ProjectivePoint","value":"ProjectivePoint { X, Y, Z }","parent":null,"children":[{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800}],"decl_id":null,"docs":" A `ProjectivePoint` is a point \\\\((X:Y:Z)\\\\) on the \\\\(\\mathbb\n P\\^2\\\\) model of the curve.\n A point \\\\((x,y)\\\\) in the affine model corresponds to\n \\\\((x:y:1)\\\\).","sig":null,"attributes":[{"value":"/ A `ProjectivePoint` is a point \\\\((X:Y:Z)\\\\) on the \\\\(\\mathbb","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":523880,"byte_end":523946,"line_start":143,"line_end":143,"column_start":1,"column_end":67}},{"value":"/ P\\^2\\\\) model of the curve.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":523947,"byte_end":523978,"line_start":144,"line_end":144,"column_start":1,"column_end":32}},{"value":"/ A point \\\\((x,y)\\\\) in the affine model corresponds to","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":523979,"byte_end":524037,"line_start":145,"line_end":145,"column_start":1,"column_end":59}},{"value":"/ \\\\((x:y:1)\\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524038,"byte_end":524056,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524057,"byte_end":524060,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524061,"byte_end":524133,"line_start":148,"line_end":148,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524134,"byte_end":524185,"line_start":149,"line_end":149,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1798},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524246,"byte_end":524247,"line_start":152,"line_end":152,"column_start":9,"column_end":10},"name":"X","qualname":"::backend::serial::curve_models::ProjectivePoint::X","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1799},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524271,"byte_end":524272,"line_start":153,"line_end":153,"column_start":9,"column_end":10},"name":"Y","qualname":"::backend::serial::curve_models::ProjectivePoint::Y","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1800},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524296,"byte_end":524297,"line_start":154,"line_end":154,"column_start":9,"column_end":10},"name":"Z","qualname":"::backend::serial::curve_models::ProjectivePoint::Z","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1804},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524708,"byte_end":524722,"line_start":166,"line_end":166,"column_start":12,"column_end":26},"name":"CompletedPoint","qualname":"::backend::serial::curve_models::CompletedPoint","value":"CompletedPoint { X, Y, Z, T }","parent":null,"children":[{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808}],"decl_id":null,"docs":" A `CompletedPoint` is a point \\\\(((X:Z), (Y:T))\\\\) on the \\\\(\\mathbb\n P\\^1 \\times \\mathbb P\\^1 \\\\) model of the curve.\n A point (x,y) in the affine model corresponds to \\\\( ((x:1),(y:1))\n \\\\).","sig":null,"attributes":[{"value":"/ A `CompletedPoint` is a point \\\\(((X:Z), (Y:T))\\\\) on the \\\\(\\mathbb","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524316,"byte_end":524388,"line_start":157,"line_end":157,"column_start":1,"column_end":73}},{"value":"/ P\\^1 \\times \\mathbb P\\^1 \\\\) model of the curve.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524389,"byte_end":524441,"line_start":158,"line_end":158,"column_start":1,"column_end":53}},{"value":"/ A point (x,y) in the affine model corresponds to \\\\( ((x:1),(y:1))","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524442,"byte_end":524512,"line_start":159,"line_end":159,"column_start":1,"column_end":71}},{"value":"/ \\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524513,"byte_end":524521,"line_start":160,"line_end":160,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524522,"byte_end":524525,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524526,"byte_end":524598,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524599,"byte_end":524650,"line_start":163,"line_end":163,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524674,"byte_end":524696,"line_start":165,"line_end":165,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1805},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524733,"byte_end":524734,"line_start":167,"line_end":167,"column_start":9,"column_end":10},"name":"X","qualname":"::backend::serial::curve_models::CompletedPoint::X","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1806},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524758,"byte_end":524759,"line_start":168,"line_end":168,"column_start":9,"column_end":10},"name":"Y","qualname":"::backend::serial::curve_models::CompletedPoint::Y","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1807},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524783,"byte_end":524784,"line_start":169,"line_end":169,"column_start":9,"column_end":10},"name":"Z","qualname":"::backend::serial::curve_models::CompletedPoint::Z","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524808,"byte_end":524809,"line_start":170,"line_end":170,"column_start":9,"column_end":10},"name":"T","qualname":"::backend::serial::curve_models::CompletedPoint::T","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525204,"byte_end":525220,"line_start":181,"line_end":181,"column_start":12,"column_end":28},"name":"AffineNielsPoint","qualname":"::backend::serial::curve_models::AffineNielsPoint","value":"AffineNielsPoint { y_plus_x, y_minus_x, xy2d }","parent":null,"children":[{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815}],"decl_id":null,"docs":" A pre-computed point in the affine model for the curve, represented as\n \\\\((y+x, y-x, 2dxy)\\\\) in \"Niels coordinates\".","sig":null,"attributes":[{"value":"/ A pre-computed point in the affine model for the curve, represented as","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524828,"byte_end":524902,"line_start":173,"line_end":173,"column_start":1,"column_end":75}},{"value":"/ \\\\((y+x, y-x, 2dxy)\\\\) in \"Niels coordinates\".","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524903,"byte_end":524953,"line_start":174,"line_end":174,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524954,"byte_end":524957,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":524958,"byte_end":525030,"line_start":176,"line_end":176,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525031,"byte_end":525082,"line_start":177,"line_end":177,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525170,"byte_end":525192,"line_start":180,"line_end":180,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1813},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525231,"byte_end":525239,"line_start":182,"line_end":182,"column_start":9,"column_end":17},"name":"y_plus_x","qualname":"::backend::serial::curve_models::AffineNielsPoint::y_plus_x","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525264,"byte_end":525273,"line_start":183,"line_end":183,"column_start":9,"column_end":18},"name":"y_minus_x","qualname":"::backend::serial::curve_models::AffineNielsPoint::y_minus_x","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1815},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525297,"byte_end":525301,"line_start":184,"line_end":184,"column_start":9,"column_end":13},"name":"xy2d","qualname":"::backend::serial::curve_models::AffineNielsPoint::xy2d","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1826},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525800,"byte_end":525820,"line_start":201,"line_end":201,"column_start":12,"column_end":32},"name":"ProjectiveNielsPoint","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint","value":"ProjectiveNielsPoint { Y_plus_X, Y_minus_X, Z, T2d }","parent":null,"children":[{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830}],"decl_id":null,"docs":" A pre-computed point on the \\\\( \\mathbb P\\^3 \\\\) model for the\n curve, represented as \\\\((Y+X, Y-X, Z, 2dXY)\\\\) in \"Niels coordinates\".","sig":null,"attributes":[{"value":"/ A pre-computed point on the \\\\( \\mathbb P\\^3 \\\\) model for the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525494,"byte_end":525560,"line_start":195,"line_end":195,"column_start":1,"column_end":67}},{"value":"/ curve, represented as \\\\((Y+X, Y-X, Z, 2dXY)\\\\) in \"Niels coordinates\".","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525561,"byte_end":525636,"line_start":196,"line_end":196,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525637,"byte_end":525640,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525641,"byte_end":525713,"line_start":198,"line_end":198,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525714,"byte_end":525765,"line_start":199,"line_end":199,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1827},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525831,"byte_end":525839,"line_start":202,"line_end":202,"column_start":9,"column_end":17},"name":"Y_plus_X","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::Y_plus_X","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1828},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525864,"byte_end":525873,"line_start":203,"line_end":203,"column_start":9,"column_end":18},"name":"Y_minus_X","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::Y_minus_X","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1829},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525897,"byte_end":525898,"line_start":204,"line_end":204,"column_start":9,"column_end":10},"name":"Z","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::Z","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1830},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525930,"byte_end":525933,"line_start":205,"line_end":205,"column_start":9,"column_end":12},"name":"T2d","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::T2d","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":530140,"byte_end":530151,"line_start":332,"line_end":332,"column_start":12,"column_end":23},"name":"to_extended","qualname":"<ProjectivePoint>::to_extended","value":"pub fn to_extended(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this point from the \\\\( \\mathbb P\\^2 \\\\) model to the\n \\\\( \\mathbb P\\^3 \\\\) model.","sig":null,"attributes":[{"value":"/ Convert this point from the \\\\( \\mathbb P\\^2 \\\\) model to the","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":529967,"byte_end":530032,"line_start":328,"line_end":328,"column_start":5,"column_end":70}},{"value":"/ \\\\( \\mathbb P\\^3 \\\\) model.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":530037,"byte_end":530068,"line_start":329,"line_end":329,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":530073,"byte_end":530076,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This costs \\\\(3 \\mathrm M + 1 \\mathrm S\\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":530081,"byte_end":530128,"line_start":331,"line_end":331,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":530559,"byte_end":530572,"line_start":347,"line_end":347,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<CompletedPoint>::to_projective","value":"pub fn to_projective(&Self) -> ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1\n \\\\) model to the \\\\( \\mathbb P\\^2 \\\\) model.","sig":null,"attributes":[{"value":"/ Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":530379,"byte_end":530447,"line_start":343,"line_end":343,"column_start":5,"column_end":73}},{"value":"/ \\\\) model to the \\\\( \\mathbb P\\^2 \\\\) model.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":530452,"byte_end":530500,"line_start":344,"line_end":344,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":530505,"byte_end":530508,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This costs \\\\(3 \\mathrm M \\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":530513,"byte_end":530547,"line_start":346,"line_end":346,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":530930,"byte_end":530941,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"name":"to_extended","qualname":"<CompletedPoint>::to_extended","value":"pub fn to_extended(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1\n \\\\) model to the \\\\( \\mathbb P\\^3 \\\\) model.","sig":null,"attributes":[{"value":"/ Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":530750,"byte_end":530818,"line_start":355,"line_end":355,"column_start":5,"column_end":73}},{"value":"/ \\\\) model to the \\\\( \\mathbb P\\^3 \\\\) model.","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":530823,"byte_end":530871,"line_start":356,"line_end":356,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":530876,"byte_end":530879,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This costs \\\\(4 \\mathrm M \\\\).","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":530884,"byte_end":530918,"line_start":358,"line_end":358,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":531390,"byte_end":531396,"line_start":375,"line_end":375,"column_start":12,"column_end":18},"name":"double","qualname":"<ProjectivePoint>::double","value":"pub fn double(&Self) -> CompletedPoint","parent":null,"children":[],"decl_id":null,"docs":" Double this point: return self + self\n","sig":null,"attributes":[{"value":"/ Double this point: return self + self","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":531337,"byte_end":531378,"line_start":374,"line_end":374,"column_start":5,"column_end":46}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":13140,"byte_end":13146,"line_start":202,"line_end":202,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":14954,"byte_end":14960,"line_start":255,"line_end":255,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":15122,"byte_end":15128,"line_start":261,"line_end":261,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":15151,"byte_end":15157,"line_start":262,"line_end":262,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":15279,"byte_end":15285,"line_start":268,"line_end":268,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":15404,"byte_end":15410,"line_start":274,"line_end":274,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":15647,"byte_end":15653,"line_start":283,"line_end":283,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":16146,"byte_end":16152,"line_start":300,"line_end":300,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":17097,"byte_end":17103,"line_start":326,"line_end":326,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":18450,"byte_end":18456,"line_start":363,"line_end":363,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":18571,"byte_end":18577,"line_start":370,"line_end":370,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":20520,"byte_end":20526,"line_start":432,"line_end":432,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":20732,"byte_end":20738,"line_start":444,"line_end":444,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":20939,"byte_end":20945,"line_start":456,"line_end":456,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":21027,"byte_end":21033,"line_start":462,"line_end":462,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":21189,"byte_end":21195,"line_start":470,"line_end":470,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":21428,"byte_end":21434,"line_start":479,"line_end":479,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":21667,"byte_end":21673,"line_start":488,"line_end":488,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":22405,"byte_end":22411,"line_start":518,"line_end":518,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":22644,"byte_end":22650,"line_start":527,"line_end":527,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":22725,"byte_end":22731,"line_start":533,"line_end":533,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":244},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":44132,"byte_end":44146,"line_start":1119,"line_end":1119,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69041,"byte_end":69056,"line_start":73,"line_end":73,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69292,"byte_end":69307,"line_start":82,"line_end":82,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69411,"byte_end":69426,"line_start":88,"line_end":88,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69547,"byte_end":69562,"line_start":94,"line_end":94,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69584,"byte_end":69599,"line_start":96,"line_end":96,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69670,"byte_end":69685,"line_start":102,"line_end":102,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":71806,"byte_end":71821,"line_start":168,"line_end":168,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":71998,"byte_end":72013,"line_start":177,"line_end":177,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":72132,"byte_end":72147,"line_start":183,"line_end":183,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":72474,"byte_end":72489,"line_start":196,"line_end":196,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":75956,"byte_end":75971,"line_start":298,"line_end":298,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":84644,"byte_end":84662,"line_start":156,"line_end":156,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":84797,"byte_end":84815,"line_start":162,"line_end":162,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":84970,"byte_end":84988,"line_start":168,"line_end":168,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":90351,"byte_end":90369,"line_start":323,"line_end":323,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":90649,"byte_end":90667,"line_start":332,"line_end":332,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":90764,"byte_end":90782,"line_start":338,"line_end":338,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":91137,"byte_end":91149,"line_start":353,"line_end":353,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":91393,"byte_end":91405,"line_start":364,"line_end":364,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":91704,"byte_end":91716,"line_start":374,"line_end":374,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":92152,"byte_end":92164,"line_start":387,"line_end":387,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":92770,"byte_end":92782,"line_start":402,"line_end":402,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":93345,"byte_end":93357,"line_start":415,"line_end":415,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":93475,"byte_end":93487,"line_start":421,"line_end":421,"column_start":13,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":93671,"byte_end":93683,"line_start":427,"line_end":427,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":96158,"byte_end":96170,"line_start":502,"line_end":502,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":96845,"byte_end":96857,"line_start":522,"line_end":522,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":97388,"byte_end":97400,"line_start":539,"line_end":539,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":97604,"byte_end":97616,"line_start":547,"line_end":547,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":98242,"byte_end":98254,"line_start":577,"line_end":577,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":98562,"byte_end":98574,"line_start":589,"line_end":589,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":100017,"byte_end":100029,"line_start":632,"line_end":632,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":101008,"byte_end":101020,"line_start":664,"line_end":664,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":102518,"byte_end":102546,"line_start":706,"line_end":706,"column_start":43,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":103279,"byte_end":103291,"line_start":735,"line_end":735,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":103974,"byte_end":103995,"line_start":755,"line_end":755,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":106530,"byte_end":106551,"line_start":824,"line_end":824,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":107321,"byte_end":107333,"line_start":846,"line_end":846,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109856,"byte_end":109868,"line_start":926,"line_end":926,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":110108,"byte_end":110129,"line_start":933,"line_end":933,"column_start":16,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":136733,"byte_end":136752,"line_start":214,"line_end":214,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":136878,"byte_end":136897,"line_start":220,"line_end":220,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":139837,"byte_end":139856,"line_start":307,"line_end":307,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":139967,"byte_end":139986,"line_start":313,"line_end":313,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":144424,"byte_end":144438,"line_start":440,"line_end":440,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":147231,"byte_end":147249,"line_start":519,"line_end":519,"column_start":14,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":147404,"byte_end":147422,"line_start":525,"line_end":525,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":155195,"byte_end":155209,"line_start":740,"line_end":740,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":155325,"byte_end":155339,"line_start":746,"line_end":746,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":155607,"byte_end":155621,"line_start":756,"line_end":756,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":155753,"byte_end":155767,"line_start":762,"line_end":762,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":156248,"byte_end":156262,"line_start":779,"line_end":779,"column_start":13,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":156782,"byte_end":156796,"line_start":795,"line_end":795,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":157334,"byte_end":157348,"line_start":813,"line_end":813,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":157557,"byte_end":157571,"line_start":821,"line_end":821,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":157940,"byte_end":157954,"line_start":841,"line_end":841,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":158088,"byte_end":158102,"line_start":849,"line_end":849,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":159344,"byte_end":159358,"line_start":886,"line_end":886,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":159845,"byte_end":159859,"line_start":904,"line_end":904,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":160743,"byte_end":160773,"line_start":927,"line_end":927,"column_start":43,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":161736,"byte_end":161750,"line_start":965,"line_end":965,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":163053,"byte_end":163076,"line_start":1010,"line_end":1010,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":163701,"byte_end":163715,"line_start":1026,"line_end":1026,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":164930,"byte_end":164949,"line_start":1067,"line_end":1067,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":165115,"byte_end":165129,"line_start":1073,"line_end":1073,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":188792,"byte_end":188793,"line_start":41,"line_end":41,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":202567,"byte_end":202579,"line_start":55,"line_end":55,"column_start":13,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":202603,"byte_end":202615,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":202745,"byte_end":202757,"line_start":63,"line_end":63,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":203065,"byte_end":203077,"line_start":72,"line_end":72,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":223216,"byte_end":223230,"line_start":43,"line_end":43,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":223389,"byte_end":223403,"line_start":49,"line_end":49,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":223512,"byte_end":223526,"line_start":55,"line_end":55,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":223947,"byte_end":223961,"line_start":72,"line_end":72,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":225141,"byte_end":225155,"line_start":101,"line_end":101,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":229509,"byte_end":229523,"line_start":220,"line_end":220,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":230827,"byte_end":230841,"line_start":252,"line_end":252,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1031},{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/scalar.rs","byte_start":242708,"byte_end":242716,"line_start":26,"line_end":26,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/scalar.rs","byte_start":242869,"byte_end":242877,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/scalar.rs","byte_start":242965,"byte_end":242973,"line_start":38,"line_end":38,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/scalar.rs","byte_start":243104,"byte_end":243112,"line_start":45,"line_end":45,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/scalar.rs","byte_start":243335,"byte_end":243343,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525342,"byte_end":525358,"line_start":187,"line_end":187,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525975,"byte_end":525995,"line_start":208,"line_end":208,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":526366,"byte_end":526381,"line_start":223,"line_end":223,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":526595,"byte_end":526615,"line_start":233,"line_end":233,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":526905,"byte_end":526925,"line_start":244,"line_end":244,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":527039,"byte_end":527055,"line_start":250,"line_end":250,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":527293,"byte_end":527309,"line_start":260,"line_end":260,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":527616,"byte_end":527631,"line_start":270,"line_end":270,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":528270,"byte_end":528290,"line_start":289,"line_end":289,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":529097,"byte_end":529113,"line_start":307,"line_end":307,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":529945,"byte_end":529960,"line_start":327,"line_end":327,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":530358,"byte_end":530372,"line_start":342,"line_end":342,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":531315,"byte_end":531330,"line_start":373,"line_end":373,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":535843,"byte_end":535858,"line_start":522,"line_end":522,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":536080,"byte_end":536094,"line_start":529,"line_end":529,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":536336,"byte_end":536352,"line_start":536,"line_end":536,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":536611,"byte_end":536631,"line_start":543,"line_end":543,"column_start":16,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/scalar_mul/straus.rs","byte_start":542997,"byte_end":543003,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/scalar_mul/straus.rs","byte_start":547000,"byte_end":547006,"line_start":145,"line_end":145,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/scalar_mul/precomputed_straus.rs","byte_start":549569,"byte_end":549593,"line_start":32,"line_end":32,"column_start":43,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/scalar_mul/pippenger.rs","byte_start":554779,"byte_end":554788,"line_start":65,"line_end":65,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":561460,"byte_end":561471,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":562326,"byte_end":562337,"line_start":75,"line_end":75,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":562453,"byte_end":562464,"line_start":81,"line_end":81,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":562637,"byte_end":562648,"line_start":87,"line_end":87,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":562960,"byte_end":562971,"line_start":97,"line_end":97,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":563321,"byte_end":563332,"line_start":108,"line_end":108,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":563589,"byte_end":563604,"line_start":121,"line_end":121,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":563855,"byte_end":563870,"line_start":131,"line_end":131,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":564047,"byte_end":564062,"line_start":137,"line_end":137,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":564448,"byte_end":564463,"line_start":149,"line_end":149,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":564922,"byte_end":564937,"line_start":165,"line_end":165,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":565110,"byte_end":565125,"line_start":174,"line_end":174,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":565402,"byte_end":565417,"line_start":184,"line_end":184,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":565816,"byte_end":565831,"line_start":196,"line_end":196,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","byte_start":2197,"byte_end":2203,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":17}},{"kind":"Mod","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","byte_start":2271,"byte_end":2281,"line_start":70,"line_end":70,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":269}},{"kind":"Mod","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","byte_start":2346,"byte_end":2353,"line_start":73,"line_end":73,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":348}},{"kind":"Mod","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","byte_start":2407,"byte_end":2416,"line_start":76,"line_end":76,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":578}},{"kind":"Mod","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","byte_start":2475,"byte_end":2484,"line_start":79,"line_end":79,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":812}},{"kind":"Mod","span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/lib.rs","byte_start":2530,"byte_end":2536,"line_start":82,"line_end":82,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":838}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":13140,"byte_end":13146,"line_start":202,"line_end":202,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":14954,"byte_end":14960,"line_start":255,"line_end":255,"column_start":16,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":15122,"byte_end":15128,"line_start":261,"line_end":261,"column_start":13,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2482}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":15151,"byte_end":15157,"line_start":262,"line_end":262,"column_start":20,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":15279,"byte_end":15285,"line_start":268,"line_end":268,"column_start":25,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1512},"to":{"krate":25,"index":58}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":15404,"byte_end":15410,"line_start":274,"line_end":274,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":3111}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":15647,"byte_end":15653,"line_start":283,"line_end":283,"column_start":36,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2928}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":16146,"byte_end":16152,"line_start":300,"line_end":300,"column_start":36,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2920}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":17097,"byte_end":17103,"line_start":326,"line_end":326,"column_start":36,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2924}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":18450,"byte_end":18456,"line_start":363,"line_end":363,"column_start":18,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":18571,"byte_end":18577,"line_start":370,"line_end":370,"column_start":34,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1512},"to":{"krate":25,"index":66}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":20520,"byte_end":20526,"line_start":432,"line_end":432,"column_start":24,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":20732,"byte_end":20738,"line_start":444,"line_end":444,"column_start":20,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":6957}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":20939,"byte_end":20945,"line_start":456,"line_end":456,"column_start":18,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":21027,"byte_end":21033,"line_start":462,"line_end":462,"column_start":19,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":21189,"byte_end":21195,"line_start":470,"line_end":470,"column_start":20,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":21428,"byte_end":21434,"line_start":479,"line_end":479,"column_start":20,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":21667,"byte_end":21673,"line_start":488,"line_end":488,"column_start":20,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":22405,"byte_end":22411,"line_start":518,"line_end":518,"column_start":21,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":22644,"byte_end":22650,"line_start":527,"line_end":527,"column_start":18,"column_end":24},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1512},"to":{"krate":24,"index":38}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":22725,"byte_end":22731,"line_start":533,"line_end":533,"column_start":6,"column_end":12},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/scalar.rs","byte_start":44132,"byte_end":44146,"line_start":1119,"line_end":1119,"column_start":6,"column_end":20},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69041,"byte_end":69056,"line_start":73,"line_end":73,"column_start":25,"column_end":40},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1561},"to":{"krate":25,"index":58}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69292,"byte_end":69307,"line_start":82,"line_end":82,"column_start":18,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1561},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69411,"byte_end":69426,"line_start":88,"line_end":88,"column_start":20,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1561},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69547,"byte_end":69562,"line_start":94,"line_end":94,"column_start":13,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1561},"to":{"krate":1,"index":2482}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69584,"byte_end":69599,"line_start":96,"line_end":96,"column_start":18,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1561},"to":{"krate":24,"index":38}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":69670,"byte_end":69685,"line_start":102,"line_end":102,"column_start":6,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":71806,"byte_end":71821,"line_start":168,"line_end":168,"column_start":19,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1574},"to":{"krate":0,"index":848}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":71998,"byte_end":72013,"line_start":177,"line_end":177,"column_start":18,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1574},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":72132,"byte_end":72147,"line_start":183,"line_end":183,"column_start":34,"column_end":49},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1574},"to":{"krate":25,"index":66}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":72474,"byte_end":72489,"line_start":196,"line_end":196,"column_start":6,"column_end":21},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/montgomery.rs","byte_start":75956,"byte_end":75971,"line_start":298,"line_end":298,"column_start":36,"column_end":51},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1561},"to":{"krate":1,"index":2928}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":84644,"byte_end":84662,"line_start":156,"line_end":156,"column_start":25,"column_end":43},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1606},"to":{"krate":25,"index":58}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":84797,"byte_end":84815,"line_start":162,"line_end":162,"column_start":16,"column_end":34},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1606},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":84970,"byte_end":84988,"line_start":168,"line_end":168,"column_start":6,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":90351,"byte_end":90369,"line_start":323,"line_end":323,"column_start":19,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1606},"to":{"krate":0,"index":848}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":90649,"byte_end":90667,"line_start":332,"line_end":332,"column_start":18,"column_end":36},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1606},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":90764,"byte_end":90782,"line_start":338,"line_end":338,"column_start":6,"column_end":24},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":91137,"byte_end":91149,"line_start":353,"line_end":353,"column_start":19,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1625},"to":{"krate":0,"index":848}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":91393,"byte_end":91405,"line_start":364,"line_end":364,"column_start":18,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":91704,"byte_end":91716,"line_start":374,"line_end":374,"column_start":24,"column_end":36},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1625},"to":{"krate":0,"index":887}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":92152,"byte_end":92164,"line_start":387,"line_end":387,"column_start":34,"column_end":46},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1625},"to":{"krate":25,"index":66}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":92770,"byte_end":92782,"line_start":402,"line_end":402,"column_start":25,"column_end":37},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1625},"to":{"krate":25,"index":58}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":93345,"byte_end":93357,"line_start":415,"line_end":415,"column_start":20,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":93475,"byte_end":93487,"line_start":421,"line_end":421,"column_start":13,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":2482}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":93671,"byte_end":93683,"line_start":427,"line_end":427,"column_start":6,"column_end":18},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":96158,"byte_end":96170,"line_start":502,"line_end":502,"column_start":6,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":96845,"byte_end":96857,"line_start":522,"line_end":522,"column_start":42,"column_end":54},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":2920}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":97388,"byte_end":97400,"line_start":539,"line_end":539,"column_start":42,"column_end":54},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":2924}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":97604,"byte_end":97616,"line_start":547,"line_end":547,"column_start":20,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":6957}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":98242,"byte_end":98254,"line_start":577,"line_end":577,"column_start":14,"column_end":26},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":98562,"byte_end":98574,"line_start":589,"line_end":589,"column_start":36,"column_end":48},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":2928}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":100017,"byte_end":100029,"line_start":632,"line_end":632,"column_start":25,"column_end":37},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1625},"to":{"krate":0,"index":855}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":101008,"byte_end":101020,"line_start":664,"line_end":664,"column_start":32,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1625},"to":{"krate":0,"index":860}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":102518,"byte_end":102546,"line_start":706,"line_end":706,"column_start":43,"column_end":71},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":538},"to":{"krate":0,"index":869}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":103279,"byte_end":103291,"line_start":735,"line_end":735,"column_start":6,"column_end":18},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":103974,"byte_end":103995,"line_start":755,"line_end":755,"column_start":6,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":106530,"byte_end":106551,"line_start":824,"line_end":824,"column_start":6,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":107321,"byte_end":107333,"line_start":846,"line_end":846,"column_start":6,"column_end":18},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":109856,"byte_end":109868,"line_start":926,"line_end":926,"column_start":16,"column_end":28},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/edwards.rs","byte_start":110108,"byte_end":110129,"line_start":933,"line_end":933,"column_start":16,"column_end":37},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1683},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":136733,"byte_end":136752,"line_start":214,"line_end":214,"column_start":25,"column_end":44},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1689},"to":{"krate":25,"index":58}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":136878,"byte_end":136897,"line_start":220,"line_end":220,"column_start":6,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":139837,"byte_end":139856,"line_start":307,"line_end":307,"column_start":19,"column_end":38},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1689},"to":{"krate":0,"index":848}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":139967,"byte_end":139986,"line_start":313,"line_end":313,"column_start":18,"column_end":37},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1689},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":144424,"byte_end":144438,"line_start":440,"line_end":440,"column_start":6,"column_end":20},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":147231,"byte_end":147249,"line_start":519,"line_end":519,"column_start":14,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":147404,"byte_end":147422,"line_start":525,"line_end":525,"column_start":47,"column_end":65},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1714},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":155195,"byte_end":155209,"line_start":740,"line_end":740,"column_start":19,"column_end":33},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1708},"to":{"krate":0,"index":848}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":155325,"byte_end":155339,"line_start":746,"line_end":746,"column_start":18,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":155607,"byte_end":155621,"line_start":756,"line_end":756,"column_start":20,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":155753,"byte_end":155767,"line_start":762,"line_end":762,"column_start":25,"column_end":39},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1708},"to":{"krate":25,"index":58}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":156248,"byte_end":156262,"line_start":779,"line_end":779,"column_start":13,"column_end":27},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":2482}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":156782,"byte_end":156796,"line_start":795,"line_end":795,"column_start":44,"column_end":58},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":2920}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":157334,"byte_end":157348,"line_start":813,"line_end":813,"column_start":44,"column_end":58},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":2924}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":157557,"byte_end":157571,"line_start":821,"line_end":821,"column_start":20,"column_end":34},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":6957}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":157940,"byte_end":157954,"line_start":841,"line_end":841,"column_start":14,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":158088,"byte_end":158102,"line_start":849,"line_end":849,"column_start":36,"column_end":50},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":2928}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":159344,"byte_end":159358,"line_start":886,"line_end":886,"column_start":25,"column_end":39},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1708},"to":{"krate":0,"index":855}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":159845,"byte_end":159859,"line_start":904,"line_end":904,"column_start":32,"column_end":46},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1708},"to":{"krate":0,"index":860}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":160743,"byte_end":160773,"line_start":927,"line_end":927,"column_start":43,"column_end":73},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":777},"to":{"krate":0,"index":869}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":161736,"byte_end":161750,"line_start":965,"line_end":965,"column_start":6,"column_end":20},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":163053,"byte_end":163076,"line_start":1010,"line_end":1010,"column_start":6,"column_end":29},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":163701,"byte_end":163715,"line_start":1026,"line_end":1026,"column_start":34,"column_end":48},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1708},"to":{"krate":25,"index":66}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":164930,"byte_end":164949,"line_start":1067,"line_end":1067,"column_start":16,"column_end":35},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1689},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/ristretto.rs","byte_start":165115,"byte_end":165129,"line_start":1073,"line_end":1073,"column_start":16,"column_end":30},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":188792,"byte_end":188793,"line_start":41,"line_end":41,"column_start":24,"column_end":25},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":853},"to":{"krate":0,"index":850}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/traits.rs","byte_start":196475,"byte_end":196480,"line_start":255,"line_end":255,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":2827},"to":{"krate":0,"index":869}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":202567,"byte_end":202579,"line_start":55,"line_end":55,"column_start":13,"column_end":25},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":916},"to":{"krate":1,"index":2482}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":202603,"byte_end":202615,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":916},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":202745,"byte_end":202757,"line_start":63,"line_end":63,"column_start":25,"column_end":37},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":916},"to":{"krate":25,"index":58}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/field.rs","byte_start":203065,"byte_end":203077,"line_start":72,"line_end":72,"column_start":6,"column_end":18},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":223216,"byte_end":223230,"line_start":43,"line_end":43,"column_start":16,"column_end":30},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1781},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":223389,"byte_end":223403,"line_start":49,"line_end":49,"column_start":18,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1781},"to":{"krate":24,"index":38}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":223512,"byte_end":223526,"line_start":55,"line_end":55,"column_start":44,"column_end":58},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1781},"to":{"krate":1,"index":2920}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":223947,"byte_end":223961,"line_start":72,"line_end":72,"column_start":44,"column_end":58},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1781},"to":{"krate":1,"index":2924}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":225141,"byte_end":225155,"line_start":101,"line_end":101,"column_start":44,"column_end":58},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1781},"to":{"krate":1,"index":2928}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":229509,"byte_end":229523,"line_start":220,"line_end":220,"column_start":34,"column_end":48},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1781},"to":{"krate":25,"index":66}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/field.rs","byte_start":230827,"byte_end":230841,"line_start":252,"line_end":252,"column_start":6,"column_end":20},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/scalar.rs","byte_start":242708,"byte_end":242716,"line_start":26,"line_end":26,"column_start":16,"column_end":24},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1789},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/scalar.rs","byte_start":242869,"byte_end":242877,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1789},"to":{"krate":24,"index":38}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/scalar.rs","byte_start":242965,"byte_end":242973,"line_start":38,"line_end":38,"column_start":23,"column_end":31},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1789},"to":{"krate":1,"index":3111}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/scalar.rs","byte_start":243104,"byte_end":243112,"line_start":45,"line_end":45,"column_start":26,"column_end":34},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1789},"to":{"krate":1,"index":3115}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/u64/scalar.rs","byte_start":243335,"byte_end":243343,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525342,"byte_end":525358,"line_start":187,"line_end":187,"column_start":18,"column_end":34},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1812},"to":{"krate":24,"index":38}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":525975,"byte_end":525995,"line_start":208,"line_end":208,"column_start":18,"column_end":38},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1826},"to":{"krate":24,"index":38}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":526366,"byte_end":526381,"line_start":223,"line_end":223,"column_start":19,"column_end":34},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1797},"to":{"krate":0,"index":848}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":526595,"byte_end":526615,"line_start":233,"line_end":233,"column_start":19,"column_end":39},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1826},"to":{"krate":0,"index":848}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":526905,"byte_end":526925,"line_start":244,"line_end":244,"column_start":18,"column_end":38},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1826},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":527039,"byte_end":527055,"line_start":250,"line_end":250,"column_start":19,"column_end":35},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1812},"to":{"krate":0,"index":848}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":527293,"byte_end":527309,"line_start":260,"line_end":260,"column_start":18,"column_end":34},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1812},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":527616,"byte_end":527631,"line_start":270,"line_end":270,"column_start":24,"column_end":39},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1797},"to":{"krate":0,"index":887}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":528270,"byte_end":528290,"line_start":289,"line_end":289,"column_start":34,"column_end":54},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1826},"to":{"krate":25,"index":66}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":529097,"byte_end":529113,"line_start":307,"line_end":307,"column_start":34,"column_end":50},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1812},"to":{"krate":25,"index":66}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":529945,"byte_end":529960,"line_start":327,"line_end":327,"column_start":6,"column_end":21},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":530358,"byte_end":530372,"line_start":342,"line_end":342,"column_start":6,"column_end":20},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":531315,"byte_end":531330,"line_start":373,"line_end":373,"column_start":6,"column_end":21},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":535843,"byte_end":535858,"line_start":522,"line_end":522,"column_start":16,"column_end":31},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1797},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":536080,"byte_end":536094,"line_start":529,"line_end":529,"column_start":16,"column_end":30},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1804},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":536336,"byte_end":536352,"line_start":536,"line_end":536,"column_start":16,"column_end":32},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1812},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/curve_models/mod.rs","byte_start":536611,"byte_end":536631,"line_start":543,"line_end":543,"column_start":16,"column_end":36},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1826},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/scalar_mul/straus.rs","byte_start":542997,"byte_end":543003,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1300},"to":{"krate":0,"index":855}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/scalar_mul/straus.rs","byte_start":547000,"byte_end":547006,"line_start":145,"line_end":145,"column_start":32,"column_end":38},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1300},"to":{"krate":0,"index":860}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/scalar_mul/precomputed_straus.rs","byte_start":549569,"byte_end":549593,"line_start":32,"line_end":32,"column_start":43,"column_end":67},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1381},"to":{"krate":0,"index":869}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/backend/serial/scalar_mul/pippenger.rs","byte_start":554779,"byte_end":554788,"line_start":65,"line_end":65,"column_start":32,"column_end":41},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1410},"to":{"krate":0,"index":860}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":561460,"byte_end":561471,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":562326,"byte_end":562337,"line_start":75,"line_end":75,"column_start":37,"column_end":48},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1834},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":562453,"byte_end":562464,"line_start":81,"line_end":81,"column_start":26,"column_end":37},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1834},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":562637,"byte_end":562648,"line_start":87,"line_end":87,"column_start":37,"column_end":48},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1834},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":562960,"byte_end":562971,"line_start":97,"line_end":97,"column_start":37,"column_end":48},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1834},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":563321,"byte_end":563332,"line_start":108,"line_end":108,"column_start":21,"column_end":32},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1834},"to":{"krate":24,"index":38}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":563589,"byte_end":563604,"line_start":121,"line_end":121,"column_start":15,"column_end":30},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":563855,"byte_end":563870,"line_start":131,"line_end":131,"column_start":26,"column_end":41},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1844},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":564047,"byte_end":564062,"line_start":137,"line_end":137,"column_start":37,"column_end":52},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1844},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":564448,"byte_end":564463,"line_start":149,"line_end":149,"column_start":37,"column_end":52},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1844},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":564922,"byte_end":564937,"line_start":165,"line_end":165,"column_start":15,"column_end":30},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":565110,"byte_end":565125,"line_start":174,"line_end":174,"column_start":26,"column_end":41},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1854},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":565402,"byte_end":565417,"line_start":184,"line_end":184,"column_start":37,"column_end":52},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1854},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/tuphan/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-2.1.0/src/window.rs","byte_start":565816,"byte_end":565831,"line_start":196,"line_end":196,"column_start":37,"column_end":52},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1854},"to":{"krate":1,"index":2728}}]}